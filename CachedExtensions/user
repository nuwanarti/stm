{"input":{"ourVersion":"1.53.0","commit":"8490d3dde47c57ba65ec40dd192d014fd2113496","locale":"en","devMode":false,"absoluteFolderPath":"/Users/rt/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"translations":{},"mtime":1620732271379},"result":[{"name":"gitignore","displayName":"gitignore","description":"Language support for .gitignore files. Lets you pull .gitignore files from the https://github.com/github/gitignore repository.","version":"0.6.0","publisher":"codezombiech","icon":"icon.png","repository":{"type":"git","url":"https://github.com/CodeZombieCH/vscode-gitignore"},"bugs":{"url":"https://github.com/CodeZombieCH/vscode-gitignore/issues"},"homepage":"https://github.com/CodeZombieCH/vscode-gitignore/issues","license":"MIT","engines":{"vscode":"^1.18.0"},"categories":["Programming Languages","Other"],"activationEvents":["onCommand:addgitignore"],"main":"./out/extension","contributes":{"commands":[{"command":"addgitignore","title":"Add gitignore"}],"configuration":{"type":"object","title":"gitignore extension configuration","properties":{"gitignore.cacheExpirationInterval":{"type":"integer","default":3600,"description":"Number of seconds the list of `.gitignore` files retrieved from github will be cached"}}},"languages":[{"id":"gitignore","aliases":["Gitignore"],"filenames":[".gitignore"],"configuration":"./gitignore.configuration.json"}],"grammars":[{"language":"gitignore","scopeName":"text.gitignore","path":"./syntaxes/gitignore.json"}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.10.38","tslint":"^5.11.0","typescript":"^2.9.2","vsce":"^1.53.0","vscode":"^1.1.21"},"dependencies":{"github":"^13.1.1"},"uuid":"3e891cf9-53cb-49a3-8d01-8f0b1f0afb29","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"codezombiech.gitignore","identifier":{"value":"codezombiech.gitignore","_lower":"codezombiech.gitignore"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/codezombiech.gitignore-0.6.0","path":"/Users/rt/.vscode/extensions/codezombiech.gitignore-0.6.0","scheme":"file"}},{"name":"bracket-pair-colorizer","displayName":"Bracket Pair Colorizer","description":"A customizable extension for colorizing matching brackets","version":"1.0.61","publisher":"CoenraadS","engines":{"vscode":"^1.23.0"},"icon":"images/icon.png","categories":["Other"],"activationEvents":["*"],"keywords":["bracket","brackets","pair","color","colour","multi-root ready"],"galleryBanner":{"color":"#1E1E1E","theme":"dark"},"main":"./out/src/extension","contributes":{"commands":[{"command":"bracket-pair-colorizer.expandBracketSelection","title":"Expand Bracket Selection"},{"command":"bracket-pair-colorizer.undoBracketSelection","title":"Undo Bracket Selection"}],"configuration":{"type":"object","title":"BracketPair","properties":{"bracketPairColorizer.timeOut":{"type":"number","default":200,"description":"How long the user should idle for, before the document is colorized. Set to 0 to disable","scope":"resource"},"bracketPairColorizer.forceUniqueOpeningColor":{"type":"boolean","default":false,"description":"Ensure that an opening brackets color does not match a previous brackets color","scope":"resource"},"bracketPairColorizer.forceIterationColorCycle":{"type":"boolean","default":false,"description":"Should opening brackets iterate the color cycle even if they are not nested","scope":"resource"},"bracketPairColorizer.colorMode":{"type":"string","enum":["Consecutive","Independent"],"default":"Consecutive","description":"Should different brackets share a color group (Consecutive), or use their own color group (Independent)","scope":"resource"},"bracketPairColorizer.highlightActiveScope":{"type":"boolean","default":false,"description":"Should the active scope brackets always be highlighted? Recommended to disable editor.matchBrackets if using this feature.","scope":"resource"},"bracketPairColorizer.activeScopeCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}; opacity: 0.5"],"description":"CSS for the active scope. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"resource"},"bracketPairColorizer.showBracketsInGutter":{"type":"boolean","default":false,"description":"Show active bracket scope in gutter?","scope":"resource"},"bracketPairColorizer.showBracketsInRuler":{"type":"boolean","default":false,"description":"Show active bracket scope in ruler?","scope":"resource"},"bracketPairColorizer.rulerPosition":{"type":"string","enum":["Center","Full","Left","Right"],"default":"Center","description":"Show active bracket scope in ruler?","scope":"resource"},"bracketPairColorizer.showVerticalScopeLine":{"type":"boolean","default":true,"description":"Show a vertical line on the left side of the editor representing the active bracket scope?","scope":"resource"},"bracketPairColorizer.showHorizontalScopeLine":{"type":"boolean","default":true,"description":"Show a horizontal line to create a block around the active bracket scope?","scope":"resource"},"bracketPairColorizer.scopeLineRelativePosition":{"type":"boolean","default":true,"description":"True: Scope Line will start from the ending bracket position. False: Scope Line will always be at column 0","scope":"resource"},"bracketPairColorizer.scopeLineCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}; opacity: 0.5"],"description":"CSS for the scope line. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"resource"},"bracketPairColorizer.consecutivePairColors":{"type":"array","default":["()","[]","{}",["Gold","Orchid","LightSkyBlue"],"Red"],"description":"Define paired characters and their shared color group","scope":"resource"},"bracketPairColorizer.independentPairColors":{"type":["array"],"items":{"type":["array"]},"default":[["()",["Gold","Orchid","LightSkyBlue"],"Red"],["[]",["Gold","Orchid","LightSkyBlue"],"Red"],["{}",["Gold","Orchid","LightSkyBlue"],"Red"]],"description":"Define paired characters and their color groups","scope":"resource"},"bracketPairColorizer.excludedLanguages":{"type":"array","default":[],"description":"Don't colorize files of these languages","scope":"window"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.107","@types/prismjs":"^1.9.0","mocha":"^2.3.3","tslint":"^4.5.1","typescript":"^2.8.3","vscode":"^1.1.16"},"repository":{"type":"git","url":"https://github.com/CoenraadS/BracketPair"},"license":"SEE LICENSE IN LICENSE.md","dependencies":{"escape-html":"^1.0.3","prismjs":"^1.15.0","vscode-uri":"^1.0.3"},"uuid":"f583eafd-aa0d-4ccb-8f44-d1e610389660","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"CoenraadS.bracket-pair-colorizer","identifier":{"value":"CoenraadS.bracket-pair-colorizer","_lower":"coenraads.bracket-pair-colorizer"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/coenraads.bracket-pair-colorizer-1.0.61","path":"/Users/rt/.vscode/extensions/coenraads.bracket-pair-colorizer-1.0.61","scheme":"file"}},{"name":"dart-code","displayName":"Dart","description":"Dart language support and debugger for Visual Studio Code.","version":"3.20.1","publisher":"Dart-Code","engines":{"vscode":"^1.52.0"},"extensionKind":["workspace"],"license":"SEE LICENSE IN LICENSE","bugs":{"url":"https://github.com/Dart-Code/Dart-Code/issues"},"homepage":"https://dartcode.org/","repository":{"type":"git","url":"https://github.com/Dart-Code/Dart-Code.git"},"categories":["Programming Languages","Snippets","Linters","Formatters","Debuggers"],"keywords":["dart","flutter","fuchsia","multi-root ready"],"icon":"media/dart.png","activationEvents":["onLanguage:dart","workspaceContains:**/pubspec.yaml","workspaceContains:**/*.dart","workspaceContains:dart.sh.create","workspaceContains:flutter.sh.create","workspaceContains:flutter.create","onCommand:flutter.createProject","onCommand:flutter.createProject.module","onCommand:flutter.createProject.package","onCommand:flutter.createProject.plugin","onCommand:dart.createProject","onCommand:_dart.flutter.createSampleProject","onCommand:flutter.doctor","onCommand:flutter.upgrade","onUri","onDebugDynamicConfigurations"],"main":"./out/dist/extension","contributes":{"languages":[{"id":"dart","extensions":[".dart"],"aliases":["Dart"],"configuration":"./syntaxes/dart-language-configuration.json"}],"grammars":[{"language":"dart","scopeName":"source.dart","path":"./syntaxes/dart.json"}],"colors":[{"id":"dart.closingLabels","description":"The color of the 'closing label' annotations shown against constructor, method invocations and lists that span multiple lines. If not supplied, the color for 'tab.inactiveForeground' will be used.","defaults":{"dark":"tab.inactiveForeground","light":"tab.inactiveForeground","highContrast":"tab.inactiveForeground"}}],"commands":[{"command":"flutter.createProject","title":"New Application Project","category":"Flutter"},{"command":"flutter.createProject.module","title":"New Module Project","category":"Flutter"},{"command":"flutter.createProject.package","title":"New Package Project","category":"Flutter"},{"command":"flutter.createProject.plugin","title":"New Plugin Project","category":"Flutter"},{"command":"dart.createProject","title":"New Project","category":"Dart"},{"command":"dart.writeRecommendedSettings","title":"Use Recommended Settings","category":"Dart"},{"command":"pub.get","title":"Get Packages","category":"Pub","icon":{"light":"./media/commands/get.svg","dark":"./media/commands/get-inverse.svg"}},{"command":"dart.task.dartdoc","title":"Generate Documentation","category":"Dart","icon":{"light":"./media/commands/documentation.svg","dark":"./media/commands/documentation-inverse.svg"}},{"command":"pub.upgrade","title":"Upgrade Packages","category":"Pub","icon":{"light":"./media/commands/upgrade.svg","dark":"./media/commands/upgrade-inverse.svg"}},{"command":"pub.outdated","title":"List Outdated Packages","category":"Pub","icon":{"light":"./media/commands/outdated.svg","dark":"./media/commands/outdated-inverse.svg"}},{"command":"dart.attach","title":"Attach to Dart Process","category":"Debug"},{"command":"flutter.attach","title":"Attach to Flutter on Device","category":"Debug"},{"command":"flutter.attachProcess","title":"Attach to Flutter Process","category":"Debug"},{"command":"dart.goToSuper","title":"Go to Super Class/Method","category":"Dart"},{"command":"dart.runAllTestsWithoutDebugging","title":"Run All Tests","category":"Dart","icon":{"dark":"./media/commands/test-run-all-dark.svg","light":"./media/commands/test-run-all-light.svg"}},{"command":"dart.runAllSkippedTestsWithoutDebugging","title":"Run All Skipped Tests (Standard Dart projects only)","enablement":"dart-code:anyStandardDartProjectLoaded","category":"Dart","icon":{"dark":"./media/commands/test-run-skipped-dark.svg","light":"./media/commands/test-run-skipped-light.svg"}},{"command":"dart.runAllFailedTestsWithoutDebugging","title":"Run All Failed Tests","category":"Dart","icon":{"dark":"./media/commands/test-run-failed-dark.svg","light":"./media/commands/test-run-failed-light.svg"}},{"command":"dart.rerunLastDebugSession","title":"Rerun Last Debug Session","category":"Dart"},{"command":"dart.rerunLastTestDebugSession","title":"Rerun Last Test Session","category":"Dart"},{"command":"dart.restartAnalysisServer","title":"Restart Analysis Server","category":"Dart"},{"command":"dart.forceReanalyze","title":"Reanalyze Project","category":"Dart"},{"command":"dart.printSelectionToTerminal","title":"Linkify Selected Editor Text into Terminal","category":"Dart"},{"command":"dart.runTestAtCursor","title":"Run Test At Cursor","category":"Dart"},{"command":"dart.goToTestOrImplementationFile","title":"Go to Test/Implementation File","category":"Dart"},{"command":"dart.clearTestResults","title":"Clear Test Results","category":"Dart","icon":{"dark":"./media/commands/test-clear-dark.svg","light":"./media/commands/test-clear-light.svg"}},{"command":"dart.goToTests","title":"Go to Tests","category":"Dart"},{"command":"_dart.displayTestOutput","title":"Display Test Output","category":"Dart"},{"command":"dart.debugTestAtCursor","title":"Debug Test At Cursor","category":"Dart"},{"command":"dart.startDebugging","title":"Start Debugging","category":"Dart","icon":"$(debug-alt-small)"},{"command":"dart.startWithoutDebugging","title":"Run Without Debugging","category":"Dart","icon":"$(play)"},{"command":"dart.startDebuggingTest","title":"Start Debugging","category":"Dart"},{"command":"dart.startWithoutDebuggingTest","title":"Run Without Debugging","category":"Dart"},{"command":"dart.startDebuggingSkippedTests","title":"Debug Skipped","category":"Dart"},{"command":"dart.startWithoutDebuggingSkippedTests","title":"Run Skipped","category":"Dart"},{"command":"dart.startDebuggingFailedTests","title":"Debug Failed","category":"Dart"},{"command":"dart.startWithoutDebuggingFailedTests","title":"Run Failed","category":"Dart"},{"command":"dart.sortMembers","title":"Sort Members","category":"Dart"},{"command":"dart.startLogging","title":"Capture Logs","category":"Dart"},{"command":"dart.startLoggingAnalysisServer","title":"Capture Analysis Server Logs","category":"Dart"},{"command":"dart.startLoggingDebugging","title":"Capture Debugging Logs","category":"Dart"},{"command":"dart.startLoggingExtensionOnly","title":"Capture Extension Logs","category":"Dart"},{"command":"dart.openExtensionLog","title":"Open Extension Log","category":"Dart"},{"command":"dart.stopLogging","title":"Stop Capturing Logs","category":"Dart"},{"command":"dart.completeStatement","title":"Complete Statement","category":"Dart"},{"command":"dart.showTypeHierarchy","title":"Show Type Hierarchy","category":"Dart"},{"command":"dart.openObservatory","title":"Open Observatory","category":"Dart"},{"command":"dart.openAnalyzerDiagnostics","title":"Open Analyzer Diagnostics","category":"Dart"},{"command":"dart.changeSdk","title":"Change SDK","category":"Dart"},{"command":"dart.changeFlutterSdk","title":"Change SDK","category":"Flutter"},{"command":"flutter.packages.get","title":"Get Packages","category":"Flutter","icon":{"light":"./media/commands/get.svg","dark":"./media/commands/get-inverse.svg"}},{"command":"flutter.packages.upgrade","title":"Upgrade Packages","category":"Flutter","icon":{"light":"./media/commands/upgrade.svg","dark":"./media/commands/upgrade-inverse.svg"}},{"command":"flutter.packages.outdated","title":"List Outdated Packages","category":"Flutter","icon":{"light":"./media/commands/outdated.svg","dark":"./media/commands/outdated-inverse.svg"}},{"command":"flutter.clean","title":"Clean Project","category":"Flutter"},{"command":"flutter.doctor","title":"Run Flutter Doctor","category":"Flutter"},{"command":"flutter.upgrade","title":"Run Flutter Upgrade","category":"Flutter"},{"command":"flutter.toggleDebugPainting","title":"Toggle Debug Painting","category":"Flutter"},{"command":"flutter.togglePerformanceOverlay","title":"Toggle Performance Overlay","category":"Flutter"},{"command":"flutter.togglePlatform","title":"Toggle Platform","category":"Flutter"},{"command":"flutter.toggleBrightness","title":"Toggle Brightness","category":"Flutter"},{"command":"flutter.toggleRepaintRainbow","title":"Toggle Repaint Rainbow","category":"Flutter"},{"command":"flutter.toggleSlowAnimations","title":"Toggle Slow Animations","category":"Flutter"},{"command":"flutter.toggleDebugModeBanner","title":"Toggle Debug-Mode Banner","category":"Flutter"},{"command":"flutter.toggleCheckElevations","title":"Toggle Check Elevations","category":"Flutter"},{"command":"flutter.togglePaintBaselines","title":"Toggle Baseline Painting","category":"Flutter"},{"command":"flutter.inspectWidget","title":"Inspect Widget","category":"Flutter"},{"command":"flutter.cancelInspectWidget","title":"Cancel Widget Inspection","category":"Flutter"},{"command":"flutter.screenshot","title":"Save Screenshot","category":"Flutter"},{"command":"_flutter.screenshot.touchBar","title":"Screenshot","category":"Flutter"},{"command":"flutter.hotRestart","title":"Hot Restart","category":"Flutter"},{"command":"flutter.hotReload","title":"Hot Reload","category":"Flutter","icon":{"dark":"media/commands/hot-reload.svg","light":"media/commands/hot-reload.svg"}},{"command":"_flutter.hotReload.touchBar","title":"Hot Reload","category":"Flutter","icon":{"dark":"media/commands/hot-reload-tb.png","light":"media/commands/hot-reload-tb.png"}},{"command":"flutter.openTimeline","title":"Open Observatory Timeline","category":"Flutter"},{"command":"dart.openDevTools","title":"Open DevTools","category":"Dart"},{"command":"flutter.openDevTools","title":"Open DevTools","category":"Flutter"},{"command":"dart.openDevToolsInspector","title":"Open DevTools Widget Inspector Page","category":"Flutter","icon":"media/commands/inspector.svg"},{"command":"dart.openDevToolsPerformance","title":"Open DevTools Performance Page","category":"Flutter","icon":"media/commands/performance.svg"},{"command":"dart.openDevToolsMemory","title":"Open DevTools Memory Page","category":"Dart"},{"command":"dart.openDevToolsCpuProfiler","title":"Open DevTools CPU Profiler Page","category":"Dart"},{"command":"dart.openDevToolsNetwork","title":"Open DevTools Network Page","category":"Dart"},{"command":"dart.openDevToolsLogging","title":"Open DevTools Logging Page","category":"Dart"},{"command":"_dart.openDevTools.touchBar","title":"DevTools","category":"Dart"},{"command":"flutter.selectDevice","title":"Select Device","category":"Flutter"},{"command":"flutter.launchEmulator","title":"Launch Emulator","category":"Flutter"},{"command":"flutter.openInAndroidStudio","title":"Open in Android Studio","category":"Flutter"},{"command":"flutter.openInXcode","title":"Open in Xcode","category":"Flutter"},{"command":"_flutter.outline.refactor.flutter.wrap.center","title":"Wrap with Center","category":"Flutter"},{"command":"_flutter.outline.refactor.flutter.wrap.padding","title":"Wrap with Padding","category":"Flutter"},{"command":"_flutter.outline.refactor.flutter.wrap.column","title":"Wrap with Column","category":"Flutter"},{"command":"_flutter.outline.refactor.flutter.wrap.row","title":"Wrap with Row","category":"Flutter"},{"command":"_flutter.outline.refactor.flutter.move.up","title":"Move widget up","category":"Flutter"},{"command":"_flutter.outline.refactor.flutter.move.down","title":"Move widget down","category":"Flutter"},{"command":"_flutter.outline.refactor.flutter.removeWidget","title":"Remove this widget","category":"Flutter"},{"command":"_dart.toggleSkippedTestVisibilityOn","title":"Show skipped tests","category":"Dart"},{"command":"_dart.toggleSkippedTestVisibilityOff","title":"Hide skipped tests","category":"Dart"}],"keybindings":[{"command":"dart.showTypeHierarchy","key":"f4","mac":"f4","when":"editorLangId == dart"},{"command":"flutter.hotReload","when":"dart-code:anyFlutterProjectLoaded && inDebugMode && dart-code:service.reloadSources","key":"ctrl+f5"},{"command":"dart.rerunLastDebugSession","when":"dart-code:anyProjectLoaded && dart-code:hasLastDebugConfig && !inDebugMode","key":"cmd+shift+f5","win":"ctrl+shift+f5"},{"command":"dart.openDevTools","when":"dart-code:anyProjectLoaded","key":"ctrl+alt+d","win":"ctrl+alt+d"}],"menus":{"commandPalette":[{"command":"flutter.createProject"},{"command":"flutter.createProject.module"},{"command":"flutter.createProject.package"},{"command":"flutter.createProject.plugin"},{"command":"dart.createProject"},{"command":"dart.startLogging","when":"dart-code:anyProjectLoaded"},{"command":"dart.startLoggingAnalysisServer","when":"dart-code:anyProjectLoaded"},{"command":"dart.startLoggingDebugging","when":"dart-code:anyProjectLoaded"},{"command":"dart.startLoggingExtensionOnly","when":"dart-code:anyProjectLoaded"},{"command":"dart.stopLogging","when":"dart-code:anyProjectLoaded && dart-code:isCapturingLogs"},{"command":"pub.get","when":"dart-code:anyProjectLoaded"},{"command":"dart.task.dartdoc","when":"dart-code:anyProjectLoaded"},{"command":"pub.upgrade","when":"dart-code:anyProjectLoaded"},{"command":"pub.outdated","when":"dart-code:anyProjectLoaded && dart-code:pubOutdatedSupported"},{"command":"dart.startDebugging","when":"false"},{"command":"dart.runAllTestsWithoutDebugging","when":"dart-code:anyProjectLoaded"},{"command":"dart.runAllSkippedTestsWithoutDebugging","when":"dart-code:anyProjectLoaded"},{"command":"dart.runAllFailedTestsWithoutDebugging","when":"dart-code:anyProjectLoaded"},{"command":"dart.rerunLastDebugSession","when":"dart-code:anyProjectLoaded && dart-code:hasLastDebugConfig"},{"command":"dart.rerunLastTestDebugSession","when":"dart-code:anyProjectLoaded && dart-code:hasLastTestDebugConfig"},{"command":"dart.restartAnalysisServer","when":"dart-code:anyProjectLoaded"},{"command":"dart.forceReanalyze","when":"dart-code:anyProjectLoaded"},{"command":"dart.printSelectionToTerminal","when":"dart-code:anyProjectLoaded && editorHasSelection"},{"command":"dart.runTestAtCursor","when":"dart-code:anyProjectLoaded && dart-code:cursorIsInTest"},{"command":"dart.goToTestOrImplementationFile","when":"dart-code:anyProjectLoaded && dart-code:canGoToTestOrImplementationFile"},{"command":"dart.clearTestResults","when":"!inDebugMode"},{"command":"dart.goToTests","when":"false"},{"command":"dart.debugTestAtCursor","when":"dart-code:anyProjectLoaded && dart-code:cursorIsInTest"},{"command":"dart.startWithoutDebugging","when":"false"},{"command":"dart.startDebuggingTest","when":"false"},{"command":"dart.startWithoutDebuggingTest","when":"false"},{"command":"dart.startDebuggingSkippedTests","when":"false"},{"command":"dart.startWithoutDebuggingSkippedTests","when":"false"},{"command":"dart.startDebuggingFailedTests","when":"false"},{"command":"dart.startWithoutDebuggingFailedTests","when":"false"},{"command":"_dart.toggleSkippedTestVisibilityOn","when":"false"},{"command":"_dart.toggleSkippedTestVisibilityOff","when":"false"},{"command":"dart.goToSuper","when":"dart-code:anyProjectLoaded && editorLangId == dart"},{"command":"dart.attach","when":"dart-code:anyProjectLoaded && !inDebugMode"},{"command":"flutter.attach","when":"dart-code:anyFlutterProjectLoaded && !inDebugMode && dart-code:flutterSupportsAttach"},{"command":"flutter.attachProcess","when":"dart-code:anyFlutterProjectLoaded && !inDebugMode && dart-code:flutterSupportsAttach"},{"command":"dart.sortMembers","when":"dart-code:anyProjectLoaded && editorLangId == dart"},{"command":"dart.completeStatement","when":"dart-code:anyProjectLoaded && editorLangId == dart && !dart-code:isLsp"},{"command":"dart.showTypeHierarchy","when":"dart-code:anyProjectLoaded && editorLangId == dart"},{"command":"dart.openObservatory","when":"dart-code:anyProjectLoaded && inDebugMode"},{"command":"dart.openAnalyzerDiagnostics","when":"dart-code:anyProjectLoaded"},{"command":"dart.changeSdk","when":"dart-code:anyProjectLoaded"},{"command":"dart.changeFlutterSdk","when":"dart-code:anyFlutterProjectLoaded"},{"command":"flutter.packages.get","when":"dart-code:anyFlutterProjectLoaded"},{"command":"flutter.packages.upgrade","when":"dart-code:anyFlutterProjectLoaded"},{"command":"flutter.packages.outdated","when":"dart-code:anyFlutterProjectLoaded && dart-code:pubOutdatedSupported"},{"command":"flutter.clean","when":"dart-code:flutterMobileProjectLoaded"},{"command":"flutter.doctor"},{"command":"flutter.upgrade"},{"command":"flutter.toggleDebugPainting","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.debugPaint"},{"command":"flutter.togglePerformanceOverlay","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.showPerformanceOverlay"},{"command":"flutter.togglePlatform","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.platformOverride"},{"command":"flutter.toggleBrightness","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.brightnessOverride"},{"command":"flutter.toggleRepaintRainbow","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.repaintRainbow"},{"command":"flutter.toggleSlowAnimations","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.timeDilation"},{"command":"flutter.toggleDebugModeBanner","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.debugAllowBanner"},{"command":"flutter.toggleCheckElevations","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.debugCheckElevationsEnabled"},{"command":"flutter.togglePaintBaselines","when":"inDebugMode && dart-code:serviceExtension.ext.flutter.debugPaintBaselinesEnabled"},{"command":"flutter.inspectWidget","when":"inDebugMode && dart-code:trackWidgetCreationEnabled"},{"command":"flutter.cancelInspectWidget","when":"inDebugMode && dart-code:trackWidgetCreationEnabled && dart-code:flutter.isInspectingWidget"},{"command":"flutter.hotRestart","when":"dart-code:anyFlutterProjectLoaded && inDebugMode && dart-code:service.hotRestart"},{"command":"flutter.hotReload","when":"dart-code:anyFlutterProjectLoaded && inDebugMode && dart-code:service.reloadSources"},{"command":"_flutter.hotReload.touchBar","when":"false"},{"command":"flutter.openTimeline","when":"dart-code:anyFlutterProjectLoaded && inDebugMode"},{"command":"dart.openDevTools","when":"dart-code:anyProjectLoaded"},{"command":"flutter.openDevTools","when":"dart-code:anyProjectLoaded && dart-code:anyFlutterProjectLoaded"},{"command":"dart.openDevToolsInspector","when":"dart-code:anyProjectLoaded && inDebugMode && dart-code:anyFlutterProjectLoaded"},{"command":"dart.openDevToolsPerformance","when":"dart-code:anyProjectLoaded && inDebugMode && dart-code:anyFlutterProjectLoaded"},{"command":"dart.openDevToolsMemory","when":"dart-code:anyProjectLoaded && inDebugMode"},{"command":"dart.openDevToolsCpuProfiler","when":"dart-code:anyProjectLoaded && inDebugMode"},{"command":"dart.openDevToolsNetwork","when":"dart-code:anyProjectLoaded && inDebugMode"},{"command":"dart.openDevToolsLogging","when":"dart-code:anyProjectLoaded && inDebugMode"},{"command":"_dart.openDevTools.touchBar","when":"false"},{"command":"flutter.selectDevice","when":"dart-code:anyFlutterProjectLoaded"},{"command":"flutter.launchEmulator","when":"dart-code:anyFlutterProjectLoaded && dart-code:isRunningLocally"},{"when":"false","command":"_flutter.outline.refactor.flutter.wrap.center"},{"when":"false","command":"_flutter.outline.refactor.flutter.wrap.padding"},{"when":"false","command":"_flutter.outline.refactor.flutter.wrap.column"},{"when":"false","command":"_flutter.outline.refactor.flutter.wrap.row"},{"when":"false","command":"_flutter.outline.refactor.flutter.move.up"},{"when":"false","command":"_flutter.outline.refactor.flutter.move.down"},{"when":"false","command":"_flutter.outline.refactor.flutter.removeWidget"},{"command":"flutter.openInAndroidStudio","when":"false"},{"command":"flutter.openInXcode","when":"false"},{"command":"flutter.screenshot","when":"dart-code:anyFlutterProjectLoaded && inDebugMode"},{"command":"_flutter.screenshot.touchBar","when":"false"}],"debug/toolBar":[{"command":"flutter.hotReload","group":"navigation@59","when":"dart-code:anyFlutterProjectLoaded && inDebugMode && debugType == dart && dart-code:service.reloadSources"},{"command":"dart.openDevToolsInspector","group":"navigation@90","when":"dart-code:anyFlutterProjectLoaded && inDebugMode && debugType == dart && dart-code:isInFlutterDebugModeDebugSession && config.dart.showDevToolsDebugToolBarButtons"},{"command":"dart.openDevToolsPerformance","group":"navigation@90","when":"dart-code:anyFlutterProjectLoaded && inDebugMode && debugType == dart && dart-code:isInFlutterProfileModeDebugSession && config.dart.showDevToolsDebugToolBarButtons"}],"touchBar":[{"command":"_flutter.hotReload.touchBar","when":"dart-code:anyFlutterProjectLoaded && inDebugMode && debugType == dart && dart-code:service.reloadSources","group":"9_debug@5"},{"command":"_dart.openDevTools.touchBar","when":"inDebugMode && debugType == dart","group":"92_debug_tools"},{"command":"_flutter.screenshot.touchBar","when":"dart-code:anyFlutterProjectLoaded && inDebugMode && debugType == dart","group":"93_utils"}],"editor/title":[{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded","command":"pub.get","group":"navigation@1"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded","command":"pub.upgrade","group":"navigation@2"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded","command":"pub.outdated","group":"navigation@3"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded","command":"flutter.packages.get","alt":"flutter.packages.upgrade","group":"navigation@1"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded","command":"flutter.packages.upgrade","group":"navigation@2"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded","command":"flutter.packages.outdated","group":"navigation@3"},{"when":"resourceFilename == dartdoc_options.yaml && dart-code:anyProjectLoaded","command":"dart.task.dartdoc","group":"navigation@1"},{"when":"resourceLangId == dart && dart-code:anyProjectLoaded && dart-code:currentFileIsRunnable","command":"dart.startWithoutDebugging","group":"1_run@10"},{"when":"resourceLangId == dart && dart-code:anyProjectLoaded && dart-code:currentFileIsRunnable","command":"dart.startDebugging","group":"1_run@20"}],"editor/context":[{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded","command":"pub.get"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded","command":"pub.upgrade"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded && dart-code:pubOutdatedSupported","command":"pub.outdated"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded","command":"flutter.packages.get"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded","command":"flutter.packages.upgrade"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded && dart-code:pubOutdatedSupported","command":"flutter.packages.outdated"},{"when":"resourceFilename == dartdoc_options.yaml && dart-code:anyProjectLoaded","command":"dart.task.dartdoc"}],"explorer/context":[{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded","command":"pub.get"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded","command":"pub.upgrade"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyProjectLoaded && !dart-code:anyFlutterProjectLoaded && dart-code:pubOutdatedSupported","command":"pub.outdated"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded","command":"flutter.packages.get"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded","command":"flutter.packages.upgrade"},{"when":"resourceFilename == pubspec.yaml && dart-code:anyFlutterProjectLoaded && dart-code:pubOutdatedSupported","command":"flutter.packages.outdated"},{"when":"resourceFilename == dartdoc_options.yaml && dart-code:anyProjectLoaded","command":"dart.task.dartdoc"},{"when":"resourceLangId == dart && dart-code:anyProjectLoaded","command":"dart.startDebugging","group":"4.5_exec@1"},{"when":"resourceLangId == dart && dart-code:anyProjectLoaded","command":"dart.startWithoutDebugging","group":"4.5_exec@1"},{"command":"flutter.openInAndroidStudio","when":"explorerResourceIsFolder && resourceFilename == android && dart-code:anyFlutterProjectLoaded && dart-code:isRunningLocally","group":"1.5_open_ext@1"},{"command":"flutter.openInXcode","when":"explorerResourceIsFolder && resourceFilename == ios && dart-code:anyFlutterProjectLoaded && dart-code:dartPlatformName == mac && dart-code:isRunningLocally","group":"1.5_open_ext@1"},{"when":"resourceLangId == dart && resourceScheme == file && resource =~ /\\/lib\\//","command":"dart.goToTests","group":"navigation@99"}],"view/title":[{"when":"view == dartFlutterOutline && dart-code:widgetSupports:refactor.flutter.wrap.center","command":"_flutter.outline.refactor.flutter.wrap.center"},{"when":"view == dartFlutterOutline && dart-code:widgetSupports:refactor.flutter.wrap.padding","command":"_flutter.outline.refactor.flutter.wrap.padding"},{"when":"view == dartFlutterOutline && dart-code:widgetSupports:refactor.flutter.wrap.column","command":"_flutter.outline.refactor.flutter.wrap.column"},{"when":"view == dartFlutterOutline && dart-code:widgetSupports:refactor.flutter.wrap.row","command":"_flutter.outline.refactor.flutter.wrap.row"},{"when":"view == dartFlutterOutline && dart-code:widgetSupports:refactor.flutter.move.up","command":"_flutter.outline.refactor.flutter.move.up"},{"when":"view == dartFlutterOutline && dart-code:widgetSupports:refactor.flutter.move.down","command":"_flutter.outline.refactor.flutter.move.down"},{"when":"view == dartFlutterOutline && dart-code:widgetSupports:refactor.flutter.removeWidget","command":"_flutter.outline.refactor.flutter.removeWidget"},{"when":"view == dartTestTree","command":"dart.runAllTestsWithoutDebugging","group":"navigation@1"},{"when":"view == dartTestTree","command":"dart.runAllFailedTestsWithoutDebugging","group":"navigation@2"},{"when":"view == dartTestTree","command":"dart.runAllSkippedTestsWithoutDebugging","group":"navigation@3"},{"when":"view == dartTestTree","command":"dart.clearTestResults","group":"navigation@4"},{"when":"view == dartTestTree && config.dart.showSkippedTests","command":"_dart.toggleSkippedTestVisibilityOff"},{"when":"view == dartTestTree && !config.dart.showSkippedTests","command":"_dart.toggleSkippedTestVisibilityOn"}],"view/item/context":[{"when":"view == dartFlutterOutline && viewItem == dart-code:isSelectedWidget && dart-code:widgetSupports:refactor.flutter.wrap.center","command":"_flutter.outline.refactor.flutter.wrap.center"},{"when":"view == dartFlutterOutline && viewItem == dart-code:isSelectedWidget && dart-code:widgetSupports:refactor.flutter.wrap.padding","command":"_flutter.outline.refactor.flutter.wrap.padding"},{"when":"view == dartFlutterOutline && viewItem == dart-code:isSelectedWidget && dart-code:widgetSupports:refactor.flutter.wrap.column","command":"_flutter.outline.refactor.flutter.wrap.column"},{"when":"view == dartFlutterOutline && viewItem == dart-code:isSelectedWidget && dart-code:widgetSupports:refactor.flutter.wrap.row","command":"_flutter.outline.refactor.flutter.wrap.row"},{"when":"view == dartFlutterOutline && viewItem == dart-code:isSelectedWidget && dart-code:widgetSupports:refactor.flutter.move.up","command":"_flutter.outline.refactor.flutter.move.up"},{"when":"view == dartFlutterOutline && viewItem == dart-code:isSelectedWidget && dart-code:widgetSupports:refactor.flutter.move.down","command":"_flutter.outline.refactor.flutter.move.down"},{"when":"view == dartFlutterOutline && viewItem == dart-code:isSelectedWidget && dart-code:widgetSupports:refactor.flutter.removeWidget","command":"_flutter.outline.refactor.flutter.removeWidget"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /^dart-code:testSuiteNode/","command":"dart.startDebuggingTest","group":"4.5_exec@1"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /^dart-code:testSuiteNode/","command":"dart.startWithoutDebuggingTest","group":"4.5_exec@2"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testContainerNodeWithFailures/","command":"dart.startDebuggingFailedTests","group":"4.5_exec@3"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testContainerNodeWithFailures/","command":"dart.startWithoutDebuggingFailedTests","group":"4.5_exec@4"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testContainerNodeWithSkips/ && viewItem =~ /dart-code:isInDartTestSuite/","command":"dart.startDebuggingSkippedTests","group":"4.5_exec@5"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testContainerNodeWithSkips/ && viewItem =~ /dart-code:isInDartTestSuite/","command":"dart.startWithoutDebuggingSkippedTests","group":"4.5_exec@6"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testGroupNode/","command":"dart.startDebuggingTest","group":"4.5_exec@1"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testGroupNode/","command":"dart.startWithoutDebuggingTest","group":"4.5_exec@2"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testTestNode/","command":"dart.startDebuggingTest","group":"4.5_exec@1"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testTestNode/","command":"dart.startWithoutDebuggingTest","group":"4.5_exec@2"},{"when":"dart-code:anyProjectLoaded && viewItem =~ /dart-code:testTestNode/","command":"_dart.displayTestOutput","group":"9_misc@1"}]},"semanticTokenScopes":[{"language":"dart","scopes":{"annotation":["variable"],"keyword":["keyword"],"keyword.control":["keyword.control"],"property.declaration":["entity.name.function.member"]}}],"viewsContainers":{"activitybar":[{"id":"flutter","title":"Flutter","icon":"media/icons/flutter_activity_bar.svg"}]},"views":{"explorer":[{"id":"dartPackages","name":"Dependencies","when":"dart-code:anyProjectLoaded"}],"flutter":[{"id":"dartFlutterOutline","name":"Outline","when":"dart-code:anyFlutterProjectLoaded && dart-code:showFlutterOutline"}],"test":[{"id":"dartTestTree","name":"Dart & Flutter","when":"dart-code:anyProjectLoaded"}]},"configurationDefaults":{"[dart]":{"editor.tabSize":2,"editor.insertSpaces":true,"editor.detectIndentation":false,"editor.suggest.insertMode":"replace"}},"configuration":{"type":"object","title":"Dart & Flutter","properties":{"dart.additionalAnalyzerFileExtensions":{"type":"array","default":[],"description":"Additional file extensions that should be analyzed (usually used in combination with analyzer plugins).","items":{"type":"string"},"scope":"window"},"dart.allowTestsOutsideTestFolder":{"type":"boolean","default":false,"markdownDescription":"Whether to consider files ending `_test.dart` that are outside of the test directory as tests. This should be enabled if you put tests inside the `lib` directory of your Flutter app so they will be run with `flutter test` and not `flutter run`.","scope":"window"},"dart.enableSdkFormatter":{"type":"boolean","default":true,"markdownDescription":"Whether to enable the [dart_style](https://pub.dev/packages/dart_style) formatter for Dart code.","scope":"window"},"dart.enableSnippets":{"type":"boolean","default":true,"description":"Whether to include Dart and Flutter snippets in code completion.","scope":"window"},"dart.env":{"type":"object","default":{},"description":"Additional environment variables to be added to all Dart/Flutter processes spawned by the Dart and Flutter extensions.","scope":"window"},"dart.closingLabels":{"type":"boolean","default":true,"description":"Whether to show annotations against constructor, method invocations and lists that span multiple lines.","scope":"window"},"dart.analysisServerFolding":{"type":"boolean","default":true,"description":"Whether to use folding data from the Dart analysis server instead of the built-in VS Code indent-based folding.","scope":"window"},"dart.analysisExcludedFolders":{"type":"array","default":[],"description":"An array of paths to be excluded from Dart analysis. This option should usually be set at the Workspace level. Excluded folders will also be ignored when detecting project types.","items":{"type":"string"},"scope":"resource"},"dart.flutterCustomEmulators":{"type":"array","default":[],"description":"Custom emulators to show in the emulator list for easier launching. If IDs match existing emulators returned by Flutter, the custom emulators will override them.","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"executable":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}}},"scope":"window"},"dart.debugSdkLibraries":{"type":"boolean","default":false,"markdownDescription":"Whether to mark Dart SDK libraries (`dart:*`) as debuggable, enabling stepping into them while debugging.","scope":"window"},"dart.debugExternalLibraries":{"type":"boolean","default":false,"markdownDescription":"Whether to mark external pub package libraries (including `package:flutter`) as debuggable, enabling stepping into them while debugging.","scope":"window"},"dart.showDartDeveloperLogs":{"type":"boolean","default":true,"markdownDescription":"Whether to show logs from the `dart:developer` `log()` function in the debug console.","scope":"resource"},"dart.showSkippedTests":{"type":"boolean","default":true,"markdownDescription":"Whether to show skipped tests in the test tree.","scope":"window"},"dart.flutterStructuredErrors":{"type":"boolean","default":true,"markdownDescription":"Whether to use Flutter's [structured error support](https://medium.com/flutter/improving-flutters-error-messages-e098513cecf9) for improved error display.","scope":"resource"},"dart.enableCompletionCommitCharacters":{"type":"boolean","default":false,"markdownDescription":"Whether to automatically commit the selected completion item when pressing certain keys such as . , ( and [. This setting does not currently apply to LSP, see `dart.previewCommitCharacters`.","scope":"resource"},"dart.previewCommitCharacters":{"type":"boolean","default":false,"description":"EXPERIMENTAL: Whether to enable commit characters for the LSP server. In a future release, the dart.enableCompletionCommitCharacters setting will also apply to LSP.","scope":"window"},"dart.triggerSignatureHelpAutomatically":{"type":"boolean","default":false,"description":"Whether to automatically trigger signature help when pressing keys such as , and (.","scope":"window"},"dart.flutterAdbConnectOnChromeOs":{"type":"boolean","default":false,"markdownDescription":"Whether to automatically run `adb connect 100.115.92.2:5555` when spawning the Flutter daemon when running on Chrome OS.","scope":"window"},"dart.flutterTrackWidgetCreation":{"type":"boolean","default":true,"markdownDescription":"Whether to pass `--track-widget-creation` to Flutter apps (required to support 'Inspect Widget'). This setting is always ignored when running in Profile or Release mode.","scope":"resource"},"dart.flutterAdditionalArgs":{"type":"array","default":[],"markdownDescription":"Additional args to pass to all `flutter` commands.","scope":"resource","items":{"type":"string"}},"dart.flutterAttachAdditionalArgs":{"type":"array","default":[],"markdownDescription":"Additional args to pass to the `flutter attach` command.","scope":"resource","items":{"type":"string"}},"dart.flutterRunAdditionalArgs":{"type":"array","default":[],"markdownDescription":"Additional args to pass to the `flutter run` command.","scope":"resource","items":{"type":"string"}},"dart.flutterTestAdditionalArgs":{"type":"array","default":[],"markdownDescription":"Additional args to pass to the `flutter test` command.","scope":"resource","items":{"type":"string"}},"dart.showInspectorNotificationsForWidgetErrors":{"type":"boolean","default":true,"markdownDescription":"Whether to show notifications for widget errors that offer Inspect Widget links. This requires that the `dart.shareDevToolsWithFlutter` setting is also enabled.","scope":"window"},"dart.hotReloadProgress":{"enum":["notification","statusBar"],"default":"notification","description":"Determines how to display Hot Restart and Hot Reload progress.","scope":"window"},"dart.evaluateGettersInDebugViews":{"type":"boolean","default":true,"description":"Whether to evaluate getters in order to display them in debug views (such as the Variables, Watch and Hovers views).","scope":"resource"},"dart.sdkPath":{"type":["null","string"],"default":null,"markdownDescription":"The location of the Dart SDK to use for analyzing and executing code. If blank, Dart Code will attempt to find it from the `PATH` environment variable. When editing a Flutter project, the version of Dart included in the Flutter SDK is used in preference.","scope":"machine-overridable"},"dart.sdkPaths":{"type":"array","default":[],"description":"An array of paths that either directly point to a Dart SDK or the parent directory of multiple Dart SDKs. When set, the version number in the status bar can be used to quickly switch between SDKs.","items":{"type":"string"},"scope":"machine-overridable"},"dart.debugExtensionBackendProtocol":{"enum":["sse","ws"],"default":"ws","description":"The protocol to use for the Dart Debug Extension backend service. Using WebSockets can improve performance but may fail when connecting through some proxy servers.","scope":"window"},"dart.devToolsTheme":{"enum":["dark","light"],"default":"dark","description":"The theme to use for Dart DevTools.","scope":"window"},"dart.devToolsBrowser":{"enum":["chrome","default"],"default":"chrome","description":"Whether to launch external DevTools windows using Chrome or the system default browser.","scope":"window"},"dart.showDevToolsDebugToolBarButtons":{"type":"boolean","default":true,"description":"Whether to show DevTools buttons in the Debug toolbar.","scope":"window"},"dart.doNotFormat":{"type":"array","default":[],"markdownDescription":"An array of glob patterns that should be excluded for formatting. The pattern is matched against the absolute path of the file. Use `**/test/**` to skip formatting for all test directories.","items":{"type":"string"},"scope":"resource"},"dart.lineLength":{"type":"integer","default":80,"description":"The maximum length of a line of code. This is used by the document formatter.","scope":"resource"},"dart.maxLogLineLength":{"type":"number","default":2000,"description":"The maximum length of a line in the log file. Lines longer than this will be truncated and suffixed with an ellipsis.","scope":"window"},"dart.insertArgumentPlaceholders":{"type":"boolean","default":true,"markdownDescription":"Whether to insert argument placeholders during code completions. This feature is automatically disabled when `enableCompletionCommitCharacters` is enabled.","scope":"resource"},"dart.completeFunctionCalls":{"type":"boolean","default":true,"markdownDescription":"Whether to insert parentheses and parameter placeholders during code completions when using LSP. This feature is automatically disabled if commit characters are enabled.","scope":"resource"},"dart.showMainCodeLens":{"type":"boolean","default":true,"description":"Whether to show CodeLens actions in the editor for quick running / debugging scripts with main functions.","scope":"window"},"dart.showTestCodeLens":{"type":"boolean","default":true,"description":"Whether to show CodeLens actions in the editor for quick running / debugging tests.","scope":"window"},"dart.showDartPadSampleCodeLens":{"type":"boolean","default":true,"description":"Whether to show CodeLens actions in the editor for opening online DartPad samples.","scope":"window"},"dart.showTodos":{"type":"boolean","default":true,"description":"Whether to show TODOs in the Problems list.","scope":"window"},"dart.openTestView":{"type":"array","items":{"enum":["testRunStart","testFailure"]},"default":["testRunStart"],"description":"When to automatically switch focus to the test list (array to support multiple values).","scope":"window"},"dart.notifyAnalyzerErrors":{"type":"boolean","default":true,"description":"Whether to show a notification the first few times an analysis server exception occurs.","scope":"window"},"dart.allowAnalytics":{"type":"boolean","default":true,"description":"Whether to send analytics such as startup timings, frequency of use of features and analysis server crashes.","scope":"window"},"dart.checkForSdkUpdates":{"type":"boolean","default":true,"description":"Whether to check you are using the latest version of the Dart SDK at startup.","scope":"window"},"dart.pubAdditionalArgs":{"type":"array","default":[],"description":"Additional args to pass to all pub commands.","scope":"resource","items":{"type":"string"}},"dart.runPubGetOnPubspecChanges":{"type":"boolean","default":true,"markdownDescription":"Whether to automatically run `pub get` whenever `pubspec.yaml` is saved.","scope":"resource"},"dart.promptToGetPackages":{"type":"boolean","default":true,"description":"Whether to prompt to get packages when opening a project with out of date packages.","scope":"resource"},"dart.flutterScreenshotPath":{"type":["null","string"],"default":null,"description":"The path to a directory to save Flutter screenshots.","scope":"machine-overridable"},"dart.flutterSdkPath":{"type":["null","string"],"default":null,"markdownDescription":"The location of the Flutter SDK to use. If blank, Dart Code will attempt to find it from the project directory, `FLUTTER_ROOT` environment variable and the `PATH` environment variable.","scope":"machine-overridable"},"dart.flutterSdkPaths":{"type":"array","default":[],"description":"An array of paths that either directly point to a Flutter SDK or the parent directory of multiple Flutter SDKs. When set, the version number in the status bar can be used to quickly switch between SDKs.","items":{"type":"string"},"scope":"machine-overridable"},"dart.flutterHotReloadOnSave":{"enum":["never","always","manual"],"default":"manual","markdownDescription":"Whether to automatically send a Hot Reload request during a debug session when saving files.\n\n- `never` - do not reload when saving.\n- `always` - reload for all saves, manual or automatic.\n- `manual` - only reload for manual saves (requires pressing Save explicitly if using autosave).","scope":"window"},"dart.flutterHotRestartOnSave":{"type":"boolean","default":true,"description":"Whether to automatically send a Hot Restart request during a debug session when saving files if Hot Reload is not available but Hot Restart is.","scope":"window"},"dart.flutterCreateOffline":{"type":"boolean","default":false,"description":"Whether to use offline mode when creating new projects with the 'Flutter: New Application Project' command.","scope":"window"},"dart.flutterCreateOrganization":{"type":["null","string"],"default":null,"markdownDescription":"The organization responsible for your new Flutter project, in reverse domain name notation (e.g. `com.google`). This string is used in Java package names and as prefix in the iOS bundle identifier when creating new projects using the 'Flutter: New Project' command.","scope":"window"},"dart.flutterCreateIOSLanguage":{"enum":["objc","swift"],"default":"swift","description":"The programming language to use for iOS apps when creating new projects using the 'Flutter: New Application Project' command.","scope":"window"},"dart.flutterCreateAndroidLanguage":{"enum":["java","kotlin"],"default":"kotlin","description":"The programming language to use for Android apps when creating new projects using the 'Flutter: New Application Project' command.","scope":"window"},"dart.analyzeAngularTemplates":{"type":"boolean","default":true,"markdownDescription":"Whether to enable analysis for AngularDart templates (requires the Angular analyzer plugin to be enabled in `analysis_options.yaml`).","scope":"window"},"dart.flutterOutline":{"type":"boolean","default":true,"description":"Whether to show the Flutter Outline tree in the sidebar.","scope":"window"},"dart.flutterWebRenderer":{"enum":["auto","html","canvaskit"],"default":"auto","markdownDescription":"Sets the [Web renderer](https://flutter.dev/docs/development/tools/web-renderers) used for Flutter web apps.\n\n- `auto` - allow Flutter to pick the best renderer based on the users device.\n- `html` - always use the HTML renderer.\n- `canvaskit` - always use the CanvasKit renderer.","scope":"window"},"dart.analyzerAdditionalArgs":{"type":"array","default":[],"description":"Additional arguments to pass to the Dart analysis server.","scope":"window","items":{"type":"string"}},"dart.analyzerDiagnosticsPort":{"type":["null","number"],"default":null,"description":"The port number to be used for the Dart analyzer diagnostic server.","scope":"window"},"dart.analyzerInstrumentationLogFile":{"type":["null","string"],"default":null,"description":"The path to a log file for very detailed logging in the Dart analysis server that may be useful when trying to diagnose analysis server issues.","scope":"machine-overridable"},"dart.analyzerSshHost":{"type":["null","string"],"default":null,"description":"An SSH host to run the analysis server.\nThis can be useful when modifying code on a remote machine using SSHFS.","scope":"window"},"dart.extensionLogFile":{"type":["null","string"],"default":null,"description":"The path to a low-traffic log file for basic extension and editor issues.","scope":"machine-overridable"},"dart.devToolsLogFile":{"type":["null","string"],"default":null,"description":"The path to a low-traffic log file for the Dart DevTools service.","scope":"machine-overridable"},"dart.analyzerLogFile":{"type":["null","string"],"default":null,"description":"The path to a log file for communication between Dart Code and the analysis server.","scope":"machine-overridable"},"dart.analyzerVmServicePort":{"type":["null","number"],"default":null,"description":"The port number to be used for the Dart analysis server VM service.","scope":"window"},"dart.analyzerPath":{"type":["null","string"],"default":null,"description":"The path to a custom Dart analysis server.","scope":"machine-overridable"},"dart.devToolsPort":{"type":["null","number"],"default":null,"description":"The port number to be used for the Dart DevTools.","scope":"window"},"dart.devToolsReuseWindows":{"type":"boolean","default":true,"description":"Whether to try to reuse existing DevTools windows instead of launching new ones. Only works for instances of DevTools launched by the DevTools server on the local machine.","scope":"window"},"dart.shareDevToolsWithFlutter":{"type":"boolean","default":true,"description":"Whether to eagerly run DevTools for Flutter workspaces and share the spawned server with `flutter run`.","scope":"window"},"dart.openDevTools":{"enum":["never","flutter","always"],"default":"never","description":"Whether to automatically open DevTools at the start of a debug session.","scope":"window"},"dart.flutterDaemonLogFile":{"type":["null","string"],"default":null,"markdownDescription":"The path to a log file for the `flutter daemon` service, which provides information about connected devices to show in the status bar.","scope":"machine-overridable"},"dart.flutterRunLogFile":{"type":["null","string"],"default":null,"markdownDescription":"The path to a log file for `flutter run`, which is used to launch Flutter apps from VS Code. This is useful when trying to diagnose issues with apps launching (or failing to) on simulators and devices. Use `${name}` in the log file name to prevent concurrent debug sessions overwriting each others logs.","scope":"machine-overridable"},"dart.flutterTestLogFile":{"type":["null","string"],"default":null,"markdownDescription":"The path to a log file for `flutter test`, which is used to run unit tests from VS Code. This is useful when trying to diagnose issues with unit test executions. Use `${name}` in the log file name to prevent concurrent debug sessions overwriting each others logs.","scope":"machine-overridable"},"dart.pubTestLogFile":{"type":["null","string"],"default":null,"markdownDescription":"The path to a log file for Dart test runs. This is useful when trying to diagnose issues with unit test executions. Use `${name}` in the log file name to prevent concurrent debug sessions overwriting each others logs.","scope":"machine-overridable"},"dart.vmServiceLogFile":{"type":["null","string"],"default":null,"markdownDescription":"The path to a log file for communication between Dart Code and the VM service. This is useful when trying to diagnose issues with debugging such as missed breakpoints. Use `${name}` in the log file name to prevent concurrent debug sessions overwriting each others logs.","scope":"machine-overridable"},"dart.useKnownChromeOSPorts":{"type":"boolean","default":true,"description":"Whether to use specific ports for the VM service and DevTools when running in Chrome OS. This is required to connect from the native Chrome OS browser but will prevent apps from launching if the ports are already in-use (for example if trying to run a second app).","scope":"window"},"dart.webDaemonLogFile":{"type":["null","string"],"default":null,"markdownDescription":"The path to a log file for communication between Dart Code and the webdev daemon. This is useful when trying to diagnose issues with launching web apps. Use `${name`} in the log file name to prevent concurrent debug sessions overwriting each others logs.","scope":"machine-overridable"},"dart.vmAdditionalArgs":{"type":"array","default":[],"description":"Additional args to pass to the Dart VM when running/debugging command line apps.","scope":"resource","items":{"type":"string"}},"dart.buildRunnerAdditionalArgs":{"type":"array","default":[],"markdownDescription":"Additional args to pass to the `build_runner` when building/watching/serving.","scope":"window","items":{"type":"string"}},"dart.flutterSelectDeviceWhenConnected":{"type":"boolean","default":true,"description":"Whether to set newly connected devices as the current device in Flutter projects.","scope":"window"},"dart.warnWhenEditingFilesOutsideWorkspace":{"type":"boolean","default":true,"description":"Whether to show a warning when modifying files outside of the workspace.","scope":"window"},"dart.warnWhenEditingFilesInPubCache":{"type":"boolean","default":true,"markdownDescription":"Whether to show a warning when modifying files in the [system package cache](https://dart.dev/tools/pub/glossary#system-cache) directory.","scope":"window"},"dart.showIgnoreQuickFixes":{"type":"boolean","default":true,"description":"Whether to show quick fixes for ignoring hints and lints.","scope":"window"},"dart.embedDevTools":{"type":"boolean","default":true,"markdownDescription":"Whether to load [Dart DevTools](https://dart.dev/tools/dart-devtools) embedded inside VS Code.","scope":"window"},"dart.updateImportsOnRename":{"type":"boolean","default":true,"description":"Whether to automatically update imports when moving or renaming files. Currently only supports single file moves / renames.","scope":"window"},"dart.flutterGutterIcons":{"type":"boolean","default":true,"description":"Whether to show Flutter icons and colors in the editor gutter.","scope":"window"},"dart.previewFlutterUiGuides":{"type":"boolean","default":false,"markdownDescription":"Whether to enable the [Flutter UI Guides preview](https://dartcode.org/releases/v3-1/#preview-flutter-ui-guides).","scope":"window"},"dart.previewFlutterUiGuidesCustomTracking":{"type":"boolean","default":false,"description":"Whether to enable custom tracking of Flutter UI guidelines (to hide some latency of waiting for the next Flutter Outline).","scope":"window"},"dart.evaluateToStringInDebugViews":{"type":"boolean","default":true,"description":"Whether to call toString() on objects when rendering them in debug views (such as the Variables, Watch and Hovers views). Only applies to views of 100 or fewer values for performance reasons.","scope":"window"},"dart.previewHotReloadOnSaveWatcher":{"type":"boolean","default":false,"markdownDescription":"Whether to perform hot reload on save based on a filesystem watcher for Dart files rather than using VS Code's `onDidSave` event. This allows reloads to trigger when external tools modify Dart source files.","scope":"window"},"dart.previewLsp":{"type":["null","boolean"],"default":null,"markdownDescription":"Whether to run the analyzer in [LSP mode](https://microsoft.github.io/language-server-protocol/) (requires restart).","scope":"window"},"dart.autoImportCompletions":{"type":"boolean","default":true,"description":"Whether to include symbols that have not been imported in the code completion list and automatically insert the required import when selecting them.","scope":"window"},"dart.promptToRunIfErrors":{"type":"boolean","default":true,"description":"Whether to prompt before running if there are errors in your project. Test scripts will be excluded from the check unless they're the script being run.","scope":"window"},"dart.previewBazelWorkspaceCustomScripts":{"type":"boolean","default":false,"markdownDescription":"EXPERIMENTAL: Whether to look for custom script definitions at `dart/config/intellij-plugins/flutter.json` in Bazel workspaces. Currently supported for macOS and Linux only.","scope":"window"}}},"breakpoints":[{"language":"dart"}],"debuggers":[{"type":"dart","label":"Dart & Flutter","program":"./out/src/dist/debug.js","runtime":"node","languages":["dart"],"configurationAttributes":{"launch":{"properties":{"cwd":{"type":"string","description":"Workspace root."},"deviceId":{"type":"string","description":"The ID of the device to launch your Flutter app on. If not supplied, will use the selected device shown in the status bar."},"console":{"enum":["debugConsole","terminal"],"default":"debugConsole","description":"Whether to run apps in the debug console (which does not support reading user input) or a VS Code terminal (which does)."},"enableAsserts":{"type":"boolean","markdownDescription":"Run the VM with `--asserts-enabled`.","default":true},"program":{"type":"string","markdownDescription":"Path to the script to start (e.g. `bin/main.dart` or `lib/main.dart`) or optionally a test directory to run a whole suite."},"runTestsOnDevice":{"type":"boolean","markdownDescription":"Whether to run Flutter test scripts on a device using `flutter run` instead of `flutter test`. Only works for whole scripts, not individual tests."},"showMemoryUsage":{"type":"boolean","description":"Show memory usage for your Flutter app in the status bar during debug sessions (if not set, will automatically show for profile builds).\n\nNote: memory usage shown in debug builds may not be indicative of usage in release builds. Use profile builds for more accurate figures when testing memory usage."},"flutterMode":{"description":"The mode for launching the Flutter app:\n\ndebug: Turns on all assertions, includes all debug information, enables all debugger aids and optimizes for fast dev cycles\n\nrelease: Turns off all assertions, strips as much debug information as possible, turns of debugger aids and optimises for fast startup, fast execution and small package sizes.\n\nprofile: Same as release mode exept profiling aids and tracing are enabled.","enum":["debug","release","profile"],"default":"debug"},"flutterPlatform":{"markdownDescription":"Passes the `--target-platform` option to the `flutter run` command. Ignored on iOS.","enum":["default","android-arm","android-arm64","android-x86","android-x64"],"default":"default"},"flutterDisableVmServiceExperimental":{"type":"boolean","description":"EXPERIMENTAL: Whether to run Flutter apps without a direct connection to the VM service."},"codeLens":{"description":"Shows this launch config in CodeLens links for main and/or test methods.","type":"object","required":["for"],"properties":{"title":{"markdownDescription":"Text for the CodeLens link. `${debugType}` will be replaced with 'Run' or 'Debug' depending on the link type (see 'for' property).","type":"string"},"path":{"description":"Optionally filters this CodeLens to only files within a relative path from the workspace root.","type":"string"},"for":{"description":"The type of entry point to show this launch config against.","type":"array","items":{"enum":["run-test","debug-test","run-file","debug-file","run-test-file","debug-test-file"]}}}},"args":{"type":"array","description":"Arguments to be passed to your Dart script or the Flutter tool.","items":{"type":"string"}},"env":{"description":"Environment variables passed to the Dart / Flutter process."},"vmAdditionalArgs":{"type":"array","default":[],"description":"Additional args to pass to the Dart VM when running / debugging command line apps.","items":{"type":"string"}}}},"attach":{"properties":{"cwd":{"type":"string","description":"Workspace root."},"program":{"type":"string","description":"Path to the entry script (eg. lib/main.dart). This is required when attaching to Flutter apps if the entry point is not lib/main.dart."},"deviceId":{"type":"string","description":"The ID of the device to attach to. If not supplied, will use the selected device shown in the status bar."},"packages":{"type":"string","description":"Path to the packages file (only required if cannot be discovered from the running process automatically)."},"vmServiceUri":{"type":"string","description":"URI of the VM service to attach to."},"serviceInfoFile":{"type":"string","markdownDescription":"File to read (expected to be written with `--write-service-info`) VM service details from if `vmServiceUri` is not supplied."}}}},"configurationSnippets":[{"label":"Dart: Launch","description":"Launch and debug Dart apps","body":{"name":"Dart","type":"dart","request":"launch","program":"^\"bin/main.dart\""}},{"label":"Dart: Attach","description":"Debug an already-running Dart app","body":{"name":"Dart: Attach to Process","type":"dart","request":"attach"}},{"label":"Dart: Run all Tests","description":"Run all tests in a Dart app","body":{"name":"Dart: Run all Tests","type":"dart","request":"launch","program":"./test/"}},{"label":"Flutter: Launch","description":"Launch and debug Flutter apps","body":{"name":"Flutter","type":"dart","request":"launch","program":"^\"lib/main.dart\""}},{"label":"Flutter: Attach to Device","description":"Attach to Flutter on a device.","body":{"name":"Flutter: Attach to Device","type":"dart","request":"attach"}},{"label":"Flutter: Run all Tests","description":"Run all tests in a Flutter app","body":{"name":"Flutter: Run all Tests","type":"dart","request":"launch","program":"./test/"}}]}],"taskDefinitions":[{"type":"dart","required":[],"properties":{"command":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}}},{"type":"flutter","required":[],"properties":{"command":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}}}],"problemMatchers":[{"name":"dart-build_runner","label":"Dart: build_runner","owner":"dart","source":"dart","fileLocation":"relative","pattern":[{"regexp":"^\\[SEVERE\\] .+ on (.+?)(?: \\(cached\\))?:$","file":1},{"regexp":"^$"},{"regexp":"^(.+)$","message":1},{"regexp":"^package:.*:(\\d+):(\\d+)$","line":1,"column":2}],"background":{"activeOnStart":true,"beginsPattern":"^\\[INFO\\] Starting Build","endsPattern":"^(\\[INFO\\] Succeeded|\\[SEVERE\\] Failed) after"}}]},"scripts":{"ensure-icon-submodule":"if [ ! -f media/doc-icons/material/ac_unit@2x.png ]; then exit 999; fi","vscode:prepublish":"npm run ensure-icon-submodule && webpack --mode production","build":"webpack --mode development","build-with-instrumentation":"webpack --env instrumentation --mode development","watch":"webpack --mode development --watch","build-tests":"tsc -p ./tsconfig.build.json","watch-non-ext":"tsc -p ./tsconfig.build.json --watch --extendedDiagnostics","lint":"eslint -c .eslintrc.js --ext .ts .","test":"npm run build-with-instrumentation && npm run build-tests && npm run instrument && npm run test-only && npm run report_lcov && npm run report_screen","instrument":"cd out/src && nyc instrument --compact false --in-place . . && cd ../..","test-only":"node ./out/src/test/test_all.js","report_lcov":"nyc report -r lcovonly --report-dir coverage/$BOT","report_screen":"nyc report"},"dependencies":{"minimatch":"^3.0.4","semver":"^7.3.4","vscode-debugadapter":"^1.43.0","vscode-debugprotocol":"^1.43.0","vscode-languageclient":"^7.0.0","ws":"^7.4.1"},"devDependencies":{"@types/glob":"^7.1.3","@types/minimatch":"^3.0.3","@types/mocha":"^8.2.0","@types/node":"^14.14.13","@types/semver":"^7.3.4","@types/sinon":"5.0.5","@types/vscode":"^1.52.0","@types/ws":"^7.4.0","@typescript-eslint/eslint-plugin-tslint":"^4.9.1","@typescript-eslint/eslint-plugin":"^4.9.1","@typescript-eslint/parser":"^4.9.1","eslint":"^7.15.0","glob":"^7.1.6","istanbul-instrumenter-loader":"^3.0.1","mocha":"^8.2.1","nyc":"^15.1.0","sinon":"^9.2.2","source-map-support":"^0.5.19","ts-loader":"^8.0.12","tslint":"^6.1.3","typescript":"^4.1.3","vscode-debugadapter-testsupport":"^1.43.0","vscode-test":"^1.4.1","webpack-cli":"^4.2.0","webpack":"^4.44.2"},"uuid":"f57f68ea-9ee8-42b5-9a97-041d3e4278c4","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"Dart-Code.dart-code","identifier":{"value":"Dart-Code.dart-code","_lower":"dart-code.dart-code"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/dart-code.dart-code-3.20.1","path":"/Users/rt/.vscode/extensions/dart-code.dart-code-3.20.1","scheme":"file"}},{"name":"flutter","displayName":"Flutter","description":"Flutter support and debugger for Visual Studio Code.","version":"3.20.0","publisher":"Dart-Code","engines":{"vscode":"^1.52.0"},"extensionKind":["workspace"],"license":"SEE LICENSE IN LICENSE","bugs":{"url":"https://github.com/Dart-Code/Dart-Code/issues"},"homepage":"https://dartcode.org/","repository":{"type":"git","url":"https://github.com/Dart-Code/Flutter.git"},"categories":["Programming Languages","Snippets","Linters","Formatters","Debuggers"],"keywords":["flutter","dart","mobile","android","ios"],"icon":"media/flutter.png","activationEvents":["onUri"],"extensionDependencies":["Dart-Code.dart-code"],"main":"./out/src/extension","contributes":{"commands":[]},"menus":{"commandPalette":[]},"scripts":{"vscode:prepublish":"npm run compile","compile":"echo Compiling... && tsc -p ./","watch":"tsc -watch -p ./","lint":"tslint src/**/*.ts -t verbose"},"devDependencies":{"@types/node":"^14.14.13","@types/vscode":"^1.52.0","tslint":"^6.1.3","typescript":"^4.1.3"},"uuid":"f6c3ec04-6057-4d9c-b997-69cba07a6158","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"Dart-Code.flutter","identifier":{"value":"Dart-Code.flutter","_lower":"dart-code.flutter"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/dart-code.flutter-3.20.0","path":"/Users/rt/.vscode/extensions/dart-code.flutter-3.20.0","scheme":"file"}},{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"2.1.20","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.53.0"},"activationEvents":["onStartupFinished"],"extensionKind":["workspace"],"main":"./client/out/extension","contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled or not.","deprecationMessage":"This setting is deprecated. Disable ESLint using the extensions viewlet."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules."},"eslint.alwaysShowStatus":{"type":"boolean","default":false,"description":"Always show the ESlint status bar item.","scope":"window"},"eslint.nodeEnv":{"scope":"resource","type":["string","null"],"default":null,"description":"The value of NODE_ENV to use when running eslint tasks."},"eslint.nodePath":{"scope":"machine-overridable","type":["string","null"],"default":null,"description":"A path added to NODE_PATH when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"description":"The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off.","deprecationMessage":"The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member."},"eslint.quiet":{"scope":"resource","type":"boolean","default":false,"description":"Turns on quiet mode, which ignores warnings."},"eslint.onIgnoredFiles":{"scope":"resource","type":"string","enum":["warn","off"],"default":"off","description":"Whether ESLint should issue a warning on ignored files."},"eslint.migration.2_x":{"scope":"application","type":"string","enum":["off","on"],"default":"on","description":"Whether ESlint should migrate auto fix on save settings."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"mode":{"type":"string","enum":["auto","location"],"default":"location"}},"required":["mode"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}},"deprecationMessage":"Use the new !cwd form.","required":["directory"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["directory"]},{"type":"object","properties":{"pattern":{"type":"string","description":"A glob pattern to match a working directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["pattern"]}]}},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint."},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language."}},"deprecationMessage":"Auto Fix is enabled by default. Use the single string form."}]},"description":"An array of language ids which should be validated by ESLint. If not installed ESLint will show an error."},"eslint.probe":{"scope":"resource","type":"array","items":{"type":"string"},"default":["javascript","javascriptreact","typescript","typescriptreact","html","vue","markdown"],"description":"An array of language ids for which the extension should probe if support is installed."},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"This option is deprecated. Use eslint.lintTask.enable instead.","description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.enable":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.options":{"scope":"resource","type":"string","default":".","description":"Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface)."},"eslint.runtime":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"The location of the node binary to run ESLint under.\n\n- When specified as a user/machine setting, the Node version from `eslint.runtime` automatically replaces the built-in version.\n- When specified as a workspace setting, `eslint.runtime` allows you to switch to use that version with the `ESLint: Select Node version` command."},"eslint.debug":{"scope":"window","type":"boolean","default":false,"description":"Enables ESLint debug mode (same as --debug on the command line)"},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"separateLine"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."}},"additionalProperties":false},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}},"additionalProperties":false},"eslint.codeActionsOnSave.mode":{"scope":"resource","type":"string","enum":["all","problems"],"enumDescriptions":["Fixes all possible problems in the file. This option might take some time.","Only fixes reported problems that have non overlapping textual edits. This options runs a lot faster."],"default":"all","description":"Specifies the code action mode. Possible values are 'all' and 'problems'."},"eslint.format.enable":{"scope":"resource","type":"boolean","default":false,"description":"Enables ESLint as a formatter."},"eslint.rules.customizations":{"description":"Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.","items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array"}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"},{"title":"Migrate Settings","category":"ESLint","command":"eslint.migrateSettings"},{"title":"Reset Library Execution Decisions","category":"ESLint","command":"eslint.resetLibraryExecution"},{"title":"Manage Library Execution","category":"ESLint","command":"eslint.manageLibraryExecution"},{"title":"Select Node Runtime","category":"ESLint","command":"eslint.selectNodeRuntime"},{"title":"Select Node Path","category":"ESLint","command":"eslint.selectNodePath"},{"title":"Restart ESLint Server","category":"ESLint","command":"eslint.restart"}],"taskDefinitions":[{"type":"eslint"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"ignore","extensions":[".eslintignore"]},{"id":"jsonc","filenames":[".eslintrc.json"]}]},"scripts":{"vscode:prepublish":"npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","lint":"npm run lint:client && npm run lint:server","lint:client":"eslint --config ./client/.eslintrc.json ./client/src/*.ts","lint:server":"eslint --config ./server/.eslintrc.json ./server/src/*.ts","clean":"rimraf client/out && rimraf server/out","postinstall":"cd client && npm install && cd ../server && npm install && cd .."},"devDependencies":{"@types/mocha":"^8.0.4","@types/node":"^12.12.6","@typescript-eslint/eslint-plugin":"^4.9.1","@typescript-eslint/parser":"^4.9.1","eslint":"^7.15.0","merge-options":"^3.0.4","mocha":"^8.2.1","rimraf":"^3.0.2","ts-loader":"^8.0.11","typescript":"^4.1.2","webpack":"^5.10.0","webpack-cli":"^4.2.0"},"uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"dbaeumer.vscode-eslint","identifier":{"value":"dbaeumer.vscode-eslint","_lower":"dbaeumer.vscode-eslint"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/dbaeumer.vscode-eslint-2.1.20","path":"/Users/rt/.vscode/extensions/dbaeumer.vscode-eslint-2.1.20","scheme":"file"}},{"name":"es7-react-js-snippets","displayName":"ES7 React/Redux/GraphQL/React-Native snippets","description":"Simple extensions for React, Redux and Graphql in JS/TS with ES7 syntax","version":"3.1.1","publisher":"dsznajder","icon":"images/logo.png","keywords":["snippets","react","redux","react-native","javascript","typescript"],"license":"MIT","repository":{"type":"git","url":"https://github.com/dsznajder/vscode-es7-javascript-react-snippets"},"engines":{"vscode":"^1.45.0"},"categories":["Snippets"],"extensionKind":["ui","workspace"],"main":"./out/index.js","activationEvents":["onCommand:extension.snippetSearch"],"contributes":{"commands":[{"command":"extension.snippetSearch","title":"ES7 snippet search"}],"keybindings":[{"command":"extension.snippetSearch","key":"ctrl+alt+r","mac":"shift+cmd+r","when":"editorTextFocus"}],"snippets":[{"language":"javascript","path":"./snippets/snippets.json"},{"language":"javascriptreact","path":"./snippets/snippets.json"},{"language":"typescript","path":"./snippets/snippets.json"},{"language":"typescriptreact","path":"./snippets/snippets.json"},{"language":"typescript","path":"./snippets/ts-snippets.json"},{"language":"typescriptreact","path":"./snippets/ts-snippets.json"}]},"scripts":{"vscode:prepublish":"yarn run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./"},"devDependencies":{"typescript":"3.9.6","@types/vscode":"^1.45.0","@types/node":"^14.0.14"},"uuid":"19804510-b475-4dae-b0f7-6ca08fd1af0c","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"dsznajder.es7-react-js-snippets","identifier":{"value":"dsznajder.es7-react-js-snippets","_lower":"dsznajder.es7-react-js-snippets"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/dsznajder.es7-react-js-snippets-3.1.1","path":"/Users/rt/.vscode/extensions/dsznajder.es7-react-js-snippets-3.1.1","scheme":"file"}},{"name":"vscode-babel-coloring","displayName":"Babel ES6/ES7","description":"Adds JS Babel es6/es7 syntax coloring","version":"0.0.4","publisher":"dzannotti","engines":{"vscode":"*"},"categories":["Languages"],"repository":{"type":"git","url":"https://github.com/dzannotti/vscode-babel/"},"bugs":"https://github.com/dzannotti/vscode-babel/issues","links":{"getstarted":{"uri":"https://github.com/dzannotti/vscode-babel/blob/master/README.md"},"support":{"uri":"https://github.com/dzannotti/vscode-babel/issues"}},"icon":"images/babel.png","galleryBanner":{"color":"#323330","theme":"dark"},"contributes":{"languages":[{"id":"javascript","aliases":["Javascript (Babel)"],"extensions":[".js",".jsx",".es6"],"firstLine":"^#!.*\\bnode","mimetypes":["text/javascript"]}],"grammars":[{"language":"javascript","scopeName":"source.js.jsx","path":"./syntaxes/Babel Language.json"},{"scopeName":"source.regexp.babel","path":"./syntaxes/Babel Regex.json"}]},"uuid":"d7b592dd-41c9-4f2b-acf3-055ae65e55c6","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"dzannotti.vscode-babel-coloring","identifier":{"value":"dzannotti.vscode-babel-coloring","_lower":"dzannotti.vscode-babel-coloring"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/dzannotti.vscode-babel-coloring-0.0.4","path":"/Users/rt/.vscode/extensions/dzannotti.vscode-babel-coloring-0.0.4","scheme":"file"}},{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"6.4.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.53.0"},"keywords":["multi-root ready","prettier","formatter","javascript","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install","prettier":"prettier --write '**/*.{ts,json,md,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","postinstall":"husky install"},"lint-staged":{"**/*.{ts,json,md,yml,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/glob":"^7.1.3","@types/lodash":"^4.14.160","@types/mocha":"^8.0.0","@types/node":"^12","@types/prettier":"^2.1.0","@types/resolve":"^1.17.0","@types/semver":"^7.3.1","@types/sinon":"^10.0.0","@types/vscode":"1.53.0","@typescript-eslint/eslint-plugin":"^4.17.0","@typescript-eslint/parser":"^4.22.0","eslint":"^7.24.0","eslint-config-prettier":"^8.1.0","glob":"^7.1.6","husky":"^6.0.0","lint-staged":"^11.0.0","mocha":"^8.0.1","sinon":"^10.0.0","ts-loader":"^9.1.2","typescript":"^4.2.4","vsce":"^1.80.0","vscode-nls-dev":"^3.3.2","vscode-test":"^1.4.0","webpack":"^5.33.2","webpack-cli":"^4.2.0"},"dependencies":{"find-up":"^5.0.0","prettier":"2.3.0","resolve":"^1.17.0","semver":"^7.3.4","vscode-nls":"^5.0.0"},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether prettier is enabled or not.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"If true, this extension will process files in node_modules","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a .prettierignore file","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the prettier module","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. Valid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"resource"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines","scope":"resource"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX","scope":"resource"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global whitespace sensitivity for HTML files.\n Valid options:\n- `css` - Respect the default value of CSS display property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"resource"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) don’t indent to save an indentation level, but this might break code folding in your editor.","scope":"resource"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier","scope":"resource"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted","scope":"resource"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"resource"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.resetModuleExecutionState","title":"Prettier: Reset Module Execution State"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/esbenp.prettier-vscode-6.4.0","path":"/Users/rt/.vscode/extensions/esbenp.prettier-vscode-6.4.0","scheme":"file"}},{"name":"auto-comment-blocks","displayName":"Auto Comment Blocks","description":"Provides block comment completion for Javadoc-style multi-line comments and single-line comment blocks for most officially supported languages.","version":"1.0.1","publisher":"kevinkyang","homepage":"https://github.com/kevinkyang/auto-comment-blocks","repository":{"type":"git","url":"https://github.com/kevinkyang/auto-comment-blocks.git"},"license":"SEE LICENSE IN LICENSE","icon":"img/icon.png","galleryBanner":{"color":"#171A29","theme":"dark"},"engines":{"vscode":"^1.12.0"},"keywords":["auto","comment","block","asterisk"],"categories":["Other"],"activationEvents":["*","onCommand:auto-comment-blocks.singleLineBlock"],"main":"./out/src/extension","contributes":{"configuration":{"title":"Auto Comment Blocks","properties":{"auto-comment-blocks.singleLineBlockOnEnter":{"type":"boolean","default":false,"description":"If enabled, a new commented line is inserted when Enter is pressed, and comment blocks are broken by pressing Shift+Enter. If disabled (the default), a commented line is inserted when Shift+Enter is pressed, and comment blocks are broken by pressing Enter."},"auto-comment-blocks.disabledLanguages":{"type":"array","default":[],"description":"Add languageIds here to disable any comment completion for that language."},"auto-comment-blocks.slashStyleBlocks":{"type":"array","default":[],"description":"Add languageIds here to enable '//' and '///'-style single line comment blocks for that language. This allows unsupported languages to have comment completion."},"auto-comment-blocks.hashStyleBlocks":{"type":"array","default":[],"description":"Add languageIds here to enable '#'-style single line comment blocks for that language. This allows unsupported languages to have comment completion."},"auto-comment-blocks.semicolonStyleBlocks":{"type":"array","default":[],"description":"Add languageIds here to enable ';'-style single line comment blocks for that language. This allows unsupported languages to have comment completion."}}},"languages":[{"id":"c","configuration":"./language-configuration/language-configuration.c.json"},{"id":"cpp","configuration":"./language-configuration/language-configuration.cpp.json"},{"id":"css","configuration":"./language-configuration/language-configuration.css.json"},{"id":"scss","configuration":"./language-configuration/language-configuration.scss.json"},{"id":"groovy","configuration":"./language-configuration/language-configuration.groovy.json"},{"id":"php","configuration":"./language-configuration/language-configuration.php.json"},{"id":"objective-c","configuration":"./language-configuration/language-configuration.objective-c.json"},{"id":"objective-cpp","configuration":"./language-configuration/language-configuration.objective-c.json"},{"id":"less","configuration":"./language-configuration/language-configuration.less.json"},{"id":"swift","configuration":"./language-configuration/language-configuration.swift.json"},{"id":"rust","configuration":"./language-configuration/language-configuration.rust.json"},{"id":"go","configuration":"./language-configuration/language-configuration.go.json"}],"keybindings":[{"command":"auto-comment-blocks.singleLineBlock","key":"shift+enter","when":"editorTextFocus"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"uuid":"cb5ffd62-3768-4f92-83a0-ccf84e22ddf4","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"kevinkyang.auto-comment-blocks","identifier":{"value":"kevinkyang.auto-comment-blocks","_lower":"kevinkyang.auto-comment-blocks"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/kevinkyang.auto-comment-blocks-1.0.1","path":"/Users/rt/.vscode/extensions/kevinkyang.auto-comment-blocks-1.0.1","scheme":"file"}},{"name":"ftp-sync","description":"Auto sync your work to remote FTP/SFTP server","version":"0.3.9","publisher":"lukasz-wronski","engines":{"vscode":"^0.10.1"},"bugs":{"url":"https://github.com/lukasz-wronski/vscode-ftp-sync/issues","email":"vscode@lukaszwronski.pl"},"homepage":"https://github.com/lukasz-wronski/vscode-ftp-sync/blob/master/README.md","repository":{"type":"git","url":"https://github.com/lukasz-wronski/vscode-ftp-sync.git"},"categories":["Other"],"icon":"icon.png","activationEvents":["onCommand:extension.ftpsyncinit","onCommand:extension.ftpsyncupload","onCommand:extension.ftpsyncdownload","onCommand:extension.ftpsynccommit","onCommand:extension.ftpsyncsingle","onCommand:extension.ftpsyncuploadselected","onCommand:extension.ftpsyncdownloadselected","workspaceContains:.vscode/ftp-sync.json"],"main":"./extension","contributes":{"commands":[{"command":"extension.ftpsyncinit","title":"Ftp-sync: Init"},{"command":"extension.ftpsyncupload","title":"Ftp-sync: Local to Remote"},{"command":"extension.ftpsyncdownload","title":"Ftp-sync: Remote to Local"},{"command":"extension.ftpsynccommit","title":"Ftp-sync: Commit"},{"command":"extension.ftpsyncsingle","title":"Ftp-sync: Sync current file to Remote"},{"command":"extension.ftpsyncuploadselected","title":"Ftp-sync: Upload File"},{"command":"extension.ftpsyncdownloadselected","title":"Ftp-sync: Download File"},{"command":"extension.ftpsynclistselected","title":"Ftp-sync: Browse Remote..."}],"menus":{"explorer/context":[{"command":"extension.ftpsyncuploadselected","group":"extension","when":"!explorerResourceIsFolder"},{"command":"extension.ftpsyncdownloadselected","group":"extension","when":"!explorerResourceIsFolder"},{"command":"extension.ftpsynclistselected","group":"extension","when":"!explorerResourceIsFolder"}]}},"devDependencies":{"vscode":"0.10.x"},"dependencies":{"fs-cp":"^1.3.1","fs-walk":"0.0.1","ftp":"^0.3.10","lodash":"~4.11.1","mkdirp":"^0.5.1","scp2":"^0.5.0","ssh2":"^0.6","stat-mode":"^0.2.1","upath":"0.1.6"},"uuid":"65c48706-0307-4a62-b6f5-e52e69f9a7ec","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"lukasz-wronski.ftp-sync","identifier":{"value":"lukasz-wronski.ftp-sync","_lower":"lukasz-wronski.ftp-sync"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/lukasz-wronski.ftp-sync-0.3.9","path":"/Users/rt/.vscode/extensions/lukasz-wronski.ftp-sync-0.3.9","scheme":"file"}},{"name":"vscode-language-babel","displayName":"Babel JavaScript","description":"VSCode syntax highlighting for today's JavaScript","version":"0.0.31","publisher":"mgmcdermott","main":"./dist/extension","engines":{"vscode":"^1.46.0"},"categories":["Programming Languages"],"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:jsx","onLanguage:jsx-attr","onLanguage:styled-css","onCommand:javascript.reloadProjects"],"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","prettier":"prettier --write '**/*.{ts,tsx,css,md}' '**/*.{ts,tsx,css,md}'","test":"vscode-tmgrammar-test -s source.js -g grammars/Babel-Language.json -t 'tests/*.js'"},"repository":{"type":"git","url":"https://github.com/mgmcdermott/vscode-language-babel/"},"bugs":"https://github.com/mgmcdermott/vscode-language-babel/issues","links":{"getstarted":{"uri":"https://github.com/mgmcdermott/vscode-language-babel/blob/master/README.md"},"support":{"uri":"https://github.com/mgmcdermott/vscode-language-babel/issues"}},"icon":"images/babel-logo.png","galleryBanner":{"color":"#323330","theme":"dark"},"contributes":{"languages":[{"id":"javascriptreact","aliases":["JavaScript React","jsx"],"extensions":[".jsx",".js"],"configuration":"./javascript.language-configuration.json"},{"id":"javascript","aliases":["Babel JavaScript"],"extensions":[".js",".es6",".babel",".jsx",".flow"],"firstLine":"^#!.*\\bnode","mimetypes":["text/javascript"],"configuration":"./javascript.language-configuration.json"},{"id":"jsx","configuration":"./jsx.language-configuration.json"},{"id":"jsx-attr","aliases":["jsx-tags"],"configuration":"./jsx-attr.language-configuration.json"},{"id":"styled-css","configuration":"./styled-css.language-configuration.json"}],"grammars":[{"language":"javascriptreact","scopeName":"source.js","path":"./grammars/Babel-Language.json","embeddedLanguages":{"meta.tag.jsx":"jsx","meta.jsx.tag.termination":"jsx","JSXNested":"jsx","JSXAttrs":"jsx-attr","source.inside-js.css.styled":"styled-css"}},{"language":"javascript","scopeName":"source.js","path":"./grammars/Babel-Language.json","embeddedLanguages":{"meta.tag.jsx":"jsx","meta.jsx.tag.termination":"jsx","JSXNested":"jsx","JSXAttrs":"jsx-attr","source.inside-js.css.styled":"styled-css"}},{"scopeName":"source.regexp.babel","path":"./grammars/Babel-Regex.json"},{"scopeName":"source.css.styled","path":"./grammars/css.json"}],"jsonValidation":[{"fileMatch":"package.json","url":"http://json.schemastore.org/package"},{"fileMatch":"bower.json","url":"http://json.schemastore.org/bower"},{"fileMatch":".bowerrc","url":"http://json.schemastore.org/bowerrc"},{"fileMatch":".babelrc","url":"http://json.schemastore.org/babelrc"},{"fileMatch":"jsconfig.json","url":"http://json.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.json","url":"./schemas/jsconfig.schema.json"},{"fileMatch":"jsconfig.*.json","url":"http://json.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.*.json","url":"./schemas/jsconfig.schema.json"}]},"lint-staged":{"*.{ts,tsx,css,md}":["prettier --write","git add"]},"dependencies":{},"devDependencies":{"@types/vscode":"^1.46.0","husky":"^1.3.1","lint-staged":"^8.1.4","prettier":"^1.16.4","typescript":"^3.3.3","vscode-tmgrammar-test":"0.0.5"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"uuid":"dd5a2c83-ad8c-4839-a529-0644e5acb646","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"mgmcdermott.vscode-language-babel","identifier":{"value":"mgmcdermott.vscode-language-babel","_lower":"mgmcdermott.vscode-language-babel"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/mgmcdermott.vscode-language-babel-0.0.31","path":"/Users/rt/.vscode/extensions/mgmcdermott.vscode-language-babel-0.0.31","scheme":"file"}},{"name":"csharp","publisher":"ms-dotnettools","version":"1.23.11","description":"C# for Visual Studio Code (powered by OmniSharp).","displayName":"C#","author":"Microsoft Corporation","license":"SEE LICENSE IN RuntimeLicenses/license.txt","icon":"images/csharpIcon.png","preview":false,"bugs":{"url":"https://github.com/OmniSharp/omnisharp-vscode/issues"},"repository":{"type":"git","url":"https://github.com/OmniSharp/omnisharp-vscode.git"},"categories":["Debuggers","Programming Languages","Linters","Snippets"],"keywords":["multi-root ready",".NET","ASP.NET",".NET Core","dotnet"],"defaults":{"omniSharp":"1.37.8","razor":"6.0.0-alpha.1.21201.19"},"main":"./dist/extension","scripts":{"vscode:prepublish":"tsc -p ./ && webpack --mode production","compile":"tsc -p ./ && gulp tslint","compileDev":"tsc -p ./ && gulp tslint && webpack --mode development","watch":"tsc -watch -p ./","tdd":"mocha --config ./.mocharc.jsonc --watch --watch-extensions ts test/unitTests/**/*.test.ts*","test":"gulp test","test:unit":"gulp test:unit","test:feature":"gulp test:feature","test:integration":"gulp test:integration","test:integration:singleCsproj":"gulp test:integration:singleCsproj","test:integration:slnWithCsproj":"gulp test:integration:slnWithCsproj","test:integration:slnFilterWithCsproj":"gulp test:integration:slnFilterWithCsproj","test:release":"mocha --config ./.mocharc.jsonc test/releaseTests/**/*.test.ts","test:artifacts":"mocha --config ./.mocharc.jsonc test/artifactTests/**/*.test.ts","postinstall":"node ./node_modules/vscode/bin/install","cov:instrument":"gulp cov:instrument","cov:merge":"gulp cov:merge","cov:merge-html":"gulp cov:merge-html","cov:report":"npm-run-all cov:report:integration cov:report:unit","cov:report:unit":"gulp cov:report:unit","cov:report:integration":"gulp cov:report:integration","unpackage:vsix":"gulp vsix:release:unpackage","gulp":"gulp"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript"},"dependencies":{"async-file":"2.0.2","fs-extra":"7.0.1","http-proxy-agent":"2.1.0","https-proxy-agent":"^3.0.1","jsonc-parser":"3.0.0","microsoft.aspnetcore.razor.vscode":"https://download.visualstudio.microsoft.com/download/pr/92748a92-32fe-4cf9-b6c2-e3d0edacf90d/d2dce097206432dfa3e47d9b09e58c93/microsoft.aspnetcore.razor.vscode-6.0.0-alpha.1.21201.19.tgz","mkdirp":"^1.0.3","node-filter-async":"1.1.1","node-machine-id":"1.1.12","remove-bom-buffer":"3.0.0","request-light":"0.2.4","rxjs":"6.4.0","semver":"5.6.0","stream":"0.0.2","strip-bom":"3.0.0","tmp":"0.0.33","vscode-debugprotocol":"1.33.0","vscode-extension-telemetry":"0.1.6","vscode-languageserver-protocol":"3.16.0","yauzl":"2.10.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"1.0.1","@types/archiver":"2.1.2","@types/chai":"4.1.7","@types/chai-arrays":"1.0.2","@types/chai-as-promised":"7.1.0","@types/chai-string":"1.4.1","@types/del":"3.0.1","@types/fs-extra":"5.0.4","@types/gulp":"4.0.5","@types/gulp-mocha":"0.0.32","@types/istanbul":"0.4.30","@types/minimist":"1.2.0","@types/mkdirp":"0.5.2","@types/mocha":"5.2.5","@types/node":"10.12.24","@types/semver":"5.5.0","@types/tmp":"0.0.33","@types/unzipper":"^0.9.1","@types/yauzl":"2.9.1","archiver":"3.0.0","async-child-process":"1.1.1","async-shelljs":"0.1.2","chai":"4.2.0","chai-arrays":"2.0.0","chai-as-promised":"7.1.1","chai-fs":"2.0.0","chai-string":"1.5.0","codecov":"3.7.1","copyfiles":"^2.3.0","cross-env":"5.2.0","del":"3.0.0","find-versions":"3.0.0","get-port":"4.1.0","glob-promise":"3.4.0","gulp":"4.0.0","gulp-mocha":"6.0.0","gulp-tslint":"8.1.3","istanbul":"0.4.5","ltcdr":"2.2.1","mocha":"^8.1.1","mocha-typescript":"1.1.17","mock-fs":"4.8.0","mock-http-server":"0.2.0","natives":"1.1.6","npm-run-all":"4.1.5","nyc":"15.0.1","plist":"3.0.1","remap-istanbul":"0.13.0","source-map-support":"0.5.10","ts-loader":"5.3.3","ts-node":"8.0.2","tslint":"5.12.1","tslint-microsoft-contrib":"6.0.0","tslint-no-unused-expression-chai":"0.1.4","typescript":"^3.8.3","unzipper":"0.9.10","vsce":"1.57.0","vscode":"1.1.37","webpack":"5.30.0","webpack-cli":"4.6.0"},"runtimeDependencies":[{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.6 / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/9166c456-55b4-4c77-92e5-92c9314f8eeb/885a7da9c9a450445006b389a7e473d7/omnisharp-win-x86-1.37.8.zip","fallbackUrl":"https://roslynomnisharp.blob.core.windows.net/releases/1.37.8/omnisharp-win-x86-1.37.8.zip","installPath":".omnisharp/1.37.8","platforms":["win32"],"architectures":["x86"],"installTestPath":"./.omnisharp/1.37.8/OmniSharp.exe","platformId":"win-x86","integrity":"96D95AE63FF2ED84C467B73D86AF108C536F7479CFE4E277C481B8875482684F"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.6 / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9166c456-55b4-4c77-92e5-92c9314f8eeb/4fdbe776755c2467591dcba0a900ed32/omnisharp-win-x64-1.37.8.zip","fallbackUrl":"https://roslynomnisharp.blob.core.windows.net/releases/1.37.8/omnisharp-win-x64-1.37.8.zip","installPath":".omnisharp/1.37.8","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.37.8/OmniSharp.exe","platformId":"win-x64","integrity":"4780414FF3C5B10469BD154E506245E3D9CC25A4C9021109391E90B70054C3A7"},{"id":"OmniSharp","description":"OmniSharp for OSX","url":"https://download.visualstudio.microsoft.com/download/pr/9166c456-55b4-4c77-92e5-92c9314f8eeb/b08d8706dbdfe32fe3413c5b9bc6365a/omnisharp-osx-1.37.8.zip","fallbackUrl":"https://roslynomnisharp.blob.core.windows.net/releases/1.37.8/omnisharp-osx-1.37.8.zip","installPath":".omnisharp/1.37.8","platforms":["darwin"],"binaries":["./mono.osx","./run"],"installTestPath":"./.omnisharp/1.37.8/run","platformId":"osx","integrity":"147AED153860BF9C7454B4571C00A649E95014E0D0CC894B836CFC24B5A18CA7"},{"id":"OmniSharp","description":"OmniSharp for Linux (x86)","url":"https://download.visualstudio.microsoft.com/download/pr/9166c456-55b4-4c77-92e5-92c9314f8eeb/24d7c6ffbf8e03d6292faed97f5e4286/omnisharp-linux-x86-1.37.8.zip","fallbackUrl":"https://roslynomnisharp.blob.core.windows.net/releases/1.37.8/omnisharp-linux-x86-1.37.8.zip","installPath":".omnisharp/1.37.8","platforms":["linux"],"architectures":["x86","i686"],"binaries":["./mono.linux-x86","./run"],"installTestPath":"./.omnisharp/1.37.8/run","platformId":"linux-x86","integrity":"34A5B6477507606FE04A67F857B0B5E749D25EBB7D4F95EE2539DFF249BB42C3"},{"id":"OmniSharp","description":"OmniSharp for Linux (x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9166c456-55b4-4c77-92e5-92c9314f8eeb/001b960216f0287efd3c7147718ecc03/omnisharp-linux-x64-1.37.8.zip","fallbackUrl":"https://roslynomnisharp.blob.core.windows.net/releases/1.37.8/omnisharp-linux-x64-1.37.8.zip","installPath":".omnisharp/1.37.8","platforms":["linux"],"architectures":["x86_64"],"binaries":["./mono.linux-x86_64","./run"],"installTestPath":"./.omnisharp/1.37.8/run","platformId":"linux-x64","integrity":"E3E1452E689EAFC73ECC0BC19DABEA483F70C64A2C34363BEA49237EE8F8B470"},{"id":"Debugger","description":".NET Core Debugger (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/22843236-af09-4293-9d23-ca35003ca60a/8ef4bedc8923b38b9a6ab98d7ec2df16/coreclr-debug-win7-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-23-9/coreclr-debug-win7-x64.zip","installPath":".debugger","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.debugger/vsdbg-ui.exe","integrity":"52D76850494F1F6B04B9CABB4C80B9E63C0762BFA676CFDD16292EBC77462989"},{"id":"Debugger","description":".NET Core Debugger (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/22843236-af09-4293-9d23-ca35003ca60a/c091f9f76df625e2f6cbae32521c7149/coreclr-debug-osx-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-23-9/coreclr-debug-osx-x64.zip","installPath":".debugger","platforms":["darwin"],"architectures":["x86_64","arm64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"E728CB6D8374D6F8BD75B23D352CB3C9B30C202C94F928AFB425E0A1CECEB54A"},{"id":"Debugger","description":".NET Core Debugger (linux / ARM)","url":"https://download.visualstudio.microsoft.com/download/pr/22843236-af09-4293-9d23-ca35003ca60a/83983aa140267cbf90b3780dfdf640a8/coreclr-debug-linux-arm.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-23-9/coreclr-debug-linux-arm.zip","installPath":".debugger","platforms":["linux"],"architectures":["arm"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"9CCDD89F495BF8FD2168FBD9D15730B1F98CD03CB2EFC74F57FCA9AD22E278DD"},{"id":"Debugger","description":".NET Core Debugger (linux / ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/22843236-af09-4293-9d23-ca35003ca60a/bfa6b939db12aacd40cf2ebda28b621d/coreclr-debug-linux-arm64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-23-9/coreclr-debug-linux-arm64.zip","installPath":".debugger","platforms":["linux"],"architectures":["arm64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"BF4C56C6A74175AC02C4DD96A1602457B318D7FE6309B1331FB535F7DF42E01D"},{"id":"Debugger","description":".NET Core Debugger (linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/22843236-af09-4293-9d23-ca35003ca60a/5736b04572b255dee1c529cc41623a4b/coreclr-debug-linux-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-23-9/coreclr-debug-linux-x64.zip","installPath":".debugger","platforms":["linux"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"29F5ABE6D317F956F0BCBF86C1344FD298D66F276597F6A0E15B5462CA8122A7"},{"id":"Razor","description":"Razor Language Server (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/92748a92-32fe-4cf9-b6c2-e3d0edacf90d/32982b98737ab510fb2f840e6271b668/razorlanguageserver-win-x64-6.0.0-alpha.1.21201.19.zip","installPath":".razor","platforms":["win32"],"architectures":["x86_64"]},{"id":"Razor","description":"Razor Language Server (Windows / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/92748a92-32fe-4cf9-b6c2-e3d0edacf90d/d44b829f47f1227c021f0c00acc22e2e/razorlanguageserver-win-x86-6.0.0-alpha.1.21201.19.zip","installPath":".razor","platforms":["win32"],"architectures":["x86"]},{"id":"Razor","description":"Razor Language Server (Linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/92748a92-32fe-4cf9-b6c2-e3d0edacf90d/edb3faa70dfc2896bc656a379538f5cc/razorlanguageserver-linux-x64-6.0.0-alpha.1.21201.19.zip","installPath":".razor","platforms":["linux"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"Razor","description":"Razor Language Server (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/92748a92-32fe-4cf9-b6c2-e3d0edacf90d/43ccc87635d42521809c69061b4ec787/razorlanguageserver-osx-x64-6.0.0-alpha.1.21201.19.zip","installPath":".razor","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./rzls"]}],"engines":{"vscode":"^1.44.0"},"activationEvents":["onDebugInitialConfigurations","onDebugResolve:blazorwasm","onDebugResolve:coreclr","onDebugResolve:clr","onLanguage:csharp","onLanguage:aspnetcorerazor","onCommand:o.restart","onCommand:o.pickProjectAndStart","onCommand:o.showOutput","onCommand:dotnet.restore.project","onCommand:dotnet.restore.all","onCommand:dotnet.generateAssets","onCommand:csharp.downloadDebugger","onCommand:csharp.listProcess","onCommand:csharp.listRemoteProcess","onCommand:omnisharp.registerLanguageMiddleware","workspaceContains:project.json","workspaceContains:*.csproj","workspaceContains:*.sln","workspaceContains:*.slnf","workspaceContains:*.csx","workspaceContains:*.cake","workspaceContains:**/*.csproj","workspaceContains:**/*.sln","workspaceContains:**/*.slnf","workspaceContains:**/*.csx","workspaceContains:**/*.cake"],"contributes":{"themes":[{"label":"Visual Studio 2019 Dark","uiTheme":"vs-dark","path":"./themes/vs2019_dark.json"},{"label":"Visual Studio 2019 Light","uiTheme":"vs","path":"./themes/vs2019_light.json"}],"configuration":{"title":"C# configuration","properties":{"csharp.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default C# formatter (requires restart)."},"csharp.suppressDotnetInstallWarning":{"type":"boolean","default":false,"description":"Suppress the warning that the .NET Core SDK is not on the path."},"csharp.unitTestDebuggingOptions":{"type":"object","description":"Options to use with the debugger when launching for unit test debugging. Any launch.json option is valid here.","default":{},"properties":{"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"type":{"type":"string","enum":["coreclr","clr"],"description":"Type type of code to debug. Can be either 'coreclr' for .NET Core debugging, or 'clr' for Desktop .NET Framework. 'clr' only works on Windows as the Desktop framework is Windows-only.","default":"coreclr"},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711}}},"csharp.suppressDotnetRestoreNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved."},"csharp.suppressProjectJsonWarning":{"type":"boolean","default":false,"description":"Suppress the warning that project.json is no longer a supported project format for .NET Core applications"},"csharp.suppressBuildAssetsNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to add missing assets to build or debug the application."},"csharp.suppressHiddenDiagnostics":{"type":"boolean","default":true,"description":"Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane."},"csharp.referencesCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the references CodeLens should be shown."},"csharp.testsCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the run and debug test CodeLens should be shown."},"csharp.maxProjectFileCountForDiagnosticAnalysis":{"type":"number","default":1000,"description":"Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely."},"csharp.semanticHighlighting.enabled":{"type":"boolean","default":false,"description":"Enable/disable Semantic Highlighting for C# files (Razor files currently unsupported). Defaults to false. Close open files for changes to take effect.","scope":"window"},"csharp.showOmnisharpLogOnError":{"type":"boolean","default":true,"description":"Shows the OmniSharp log in the Output pane when OmniSharp reports an error."},"omnisharp.path":{"type":["string","null"],"default":null,"scope":"machine","description":"Specifies the path to OmniSharp. When left empty the OmniSharp version pinned to the C# Extension is used. This can be the absolute path to an OmniSharp executable, a specific version number, or \"latest\". If a version number or \"latest\" is specified, the appropriate version of OmniSharp will be downloaded on your behalf. Setting \"latest\" is an opt-in into latest beta releases of OmniSharp."},"omnisharp.useGlobalMono":{"type":"string","default":"auto","scope":"machine","enum":["auto","always","never"],"enumDescriptions":["Automatically launch OmniSharp with internal \"mono\", since \"mono\" 6.12.0 does not support .NET Core 3.1.40x or .NET 5 SDKs.","Always launch OmniSharp with \"mono\". If version 6.4.0 or greater is not available on the PATH, an error will be printed.","Never launch OmniSharp on a globally-installed Mono."],"description":"Launch OmniSharp with the globally-installed Mono. If set to \"always\", \"mono\" version 6.4.0 or greater must be available on the PATH. If set to \"auto\", OmniSharp will be launched with \"mono\" if version 6.4.0 or greater is available on the PATH."},"omnisharp.monoPath":{"type":["string","null"],"default":null,"scope":"machine","description":"Specifies the path to a mono installation to use when \"useGlobalMono\" is set to \"always\", instead of the default system one. Example: \"/Library/Frameworks/Mono.framework/Versions/Current\""},"omnisharp.waitForDebugger":{"type":"boolean","default":false,"description":"Pass the --debug flag when launching the OmniSharp server to allow a debugger to be attached."},"omnisharp.loggingLevel":{"type":"string","default":"information","enum":["trace","debug","information","warning","error","critical"],"description":"Specifies the level of logging output from the OmniSharp server."},"omnisharp.autoStart":{"type":"boolean","default":true,"description":"Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command"},"omnisharp.projectLoadTimeout":{"type":"number","default":60,"description":"The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds."},"omnisharp.maxProjectResults":{"type":"number","default":250,"description":"The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250)."},"omnisharp.defaultLaunchSolution":{"type":"string","default":null,"description":"The name of the default solution used at start up if the repo has multiple solutions. e.g.'MyAwesomeSolution.sln'. Default value is `null` which will cause the first in alphabetical order to be chosen."},"omnisharp.useEditorFormattingSettings":{"type":"boolean","default":true,"description":"Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size)."},"omnisharp.minFindSymbolsFilterLength":{"type":"number","default":0,"description":"The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results."},"omnisharp.maxFindSymbolsItems":{"type":"number","default":1000,"description":"The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here."},"omnisharp.disableMSBuildDiagnosticWarning":{"type":"boolean","default":false,"description":"Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log"},"omnisharp.enableMsBuildLoadProjectsOnDemand":{"type":"boolean","default":false,"description":"If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols."},"omnisharp.enableRoslynAnalyzers":{"type":"boolean","default":false,"description":"Enables support for roslyn analyzers, code fixes and rulesets."},"omnisharp.enableEditorConfigSupport":{"type":"boolean","default":true,"description":"Enables support for reading code style, naming convention and analyzer settings from .editorconfig."},"omnisharp.enableDecompilationSupport":{"type":"boolean","default":false,"scope":"machine","description":"Enables support for decompiling external references instead of viewing metadata."},"omnisharp.enableImportCompletion":{"type":"boolean","default":false,"description":"Enables support for showing unimported types and unimported extension methods in completion lists. When committed, the appropriate using directive will be added at the top of the current file. This option can have a negative impact on initial completion responsiveness, particularly for the first few completion sessions after opening a solution."},"omnisharp.organizeImportsOnFormat":{"type":"boolean","default":false,"description":"Specifies whether 'using' directives should be grouped and sorted during document formatting."},"razor.plugin.path":{"type":["string","null"],"default":null,"scope":"machine","description":"Overrides the path to the Razor plugin dll."},"razor.devmode":{"type":"boolean","default":false,"description":"Forces the omnisharp-vscode extension to run in a mode that enables local Razor.VSCode deving."},"razor.disabled":{"type":"boolean","default":false,"description":"Specifies whether to disable Razor language features."},"razor.languageServer.directory":{"type":["string","null"],"default":null,"scope":"machine","description":"Overrides the path to the Razor Language Server directory."},"razor.languageServer.debug":{"type":"boolean","default":false,"description":"Specifies whether to wait for debug attach when launching the language server."},"razor.trace":{"type":"string","default":"Off","enum":["Off","Messages","Verbose"],"enumDescriptions":["Does not log messages from the Razor extension","Logs only some messages from the Razor extension","Logs all messages from the Razor extension"],"description":"Specifies whether to output all messages [Verbose], some messages [Messages] or not at all [Off]."},"razor.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default Razor formatter."},"razor.disableBlazorDebugPrompt":{"type":"boolean","default":false,"description":"Disable Blazor WebAssembly's debug requirements notification."}}},"jsonValidation":[{"fileMatch":["appsettings.json","appsettings.*.json"],"url":"https://json.schemastore.org/appsettings"},{"fileMatch":"project.json","url":"http://json.schemastore.org/project"},{"fileMatch":"omnisharp.json","url":"http://json.schemastore.org/omnisharp"},{"fileMatch":"global.json","url":"http://json.schemastore.org/global"}],"commands":[{"command":"o.restart","title":"Restart OmniSharp","category":"OmniSharp"},{"command":"o.pickProjectAndStart","title":"Select Project","category":"OmniSharp"},{"command":"o.fixAll.solution","title":"Fix all occurrences of a code issue within solution","category":"OmniSharp"},{"command":"o.fixAll.project","title":"Fix all occurrences of a code issue within project","category":"OmniSharp"},{"command":"o.fixAll.document","title":"Fix all occurrences of a code issue within document","category":"OmniSharp"},{"command":"o.reanalyze.allProjects","title":"Analyze all projects","category":"OmniSharp"},{"command":"o.reanalyze.currentProject","title":"Analyze current project","category":"OmniSharp"},{"command":"dotnet.generateAssets","title":"Generate Assets for Build and Debug","category":".NET"},{"command":"dotnet.restore.project","title":"Restore Project","category":".NET"},{"command":"dotnet.restore.all","title":"Restore All Projects","category":".NET"},{"command":"csharp.downloadDebugger","title":"Download .NET Core Debugger","category":"Debug"},{"command":"csharp.listProcess","title":"List process for attach","category":"CSharp"},{"command":"csharp.listRemoteProcess","title":"List processes on remote connection for attach","category":"CSharp"},{"command":"csharp.reportIssue","title":"Report an issue","category":"CSharp"},{"command":"csharp.showDecompilationTerms","title":"Show the decompiler terms agreement","category":"CSharp"},{"command":"extension.showRazorCSharpWindow","title":"Show Razor CSharp","category":"Razor"},{"command":"extension.showRazorHtmlWindow","title":"Show Razor Html","category":"Razor"},{"command":"razor.reportIssue","title":"Report a Razor issue","category":"Razor"},{"command":"dotnet.test.runTestsInContext","title":"Run Tests in Context","category":".NET"},{"command":"dotnet.test.debugTestsInContext","title":"Debug Tests in Context","category":".NET"}],"keybindings":[{"command":"o.showOutput","key":"Ctrl+Shift+F9","mac":"Cmd+Shift+F9"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}],"breakpoints":[{"language":"csharp"},{"language":"razor"},{"language":"qsharp"},{"language":"aspnetcorerazor"}],"debuggers":[{"type":"coreclr","label":".NET Core","variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Environment variables passed to the program by a file.","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetOutputLogPath":{"type":"string","description":"When set, text that the target application writes to stdout and stderr (ex: Console.WriteLine) will be saved to the specified file. This option is ignored if console is set to something other than internalConsole.","default":"${workspaceFolder}/out.txt"}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcess}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcess}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true}}}},"configurationSnippets":[{"label":".NET: Launch .NET Core Console App","description":"Launch a .NET Core Console App with a debugger.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole"}},{"label":".NET: Attach to local .NET Core Console App","description":"Attach a debugger to a .NET Core Console App.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickProcess}\""}},{"label":".NET: Launch a local .NET Core Web App","description":"Launch a .NET Core Web App with both a browser and a debugger.","body":{"name":".NET Core Launch (web)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"serverReadyAction":{"action":"openExternally","pattern":"\\\\bNow listening on:\\\\s+(https?://\\\\S+)"},"env":{"ASPNETCORE_ENVIRONMENT":"Development"},"sourceFileMap":{"/Views":"^\"\\${workspaceFolder}/Views\""}}},{"label":".NET: Launch a remote .NET Core Console App","description":"Launch a .NET Core Console App on a remote machine.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${3:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${4:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}},{"label":".NET: Attach to remote .NET Core Console App","description":"Attach a debugger to a .NET Core Console App on a remote machine.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickRemoteProcess}\"","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${1:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${2:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}}]},{"type":"clr","label":".NET","variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Environment variables passed to the program by a file.","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetOutputLogPath":{"type":"string","description":"When set, text that the target application writes to stdout and stderr (ex: Console.WriteLine) will be saved to the specified file. This option is ignored if console is set to something other than internalConsole.","default":"${workspaceFolder}/out.txt"}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcess}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcess}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true}}}}},{"type":"blazorwasm","label":"Blazor WebAssembly Debug","initialConfigurations":[{"type":"blazorwasm","name":"Launch and Debug Blazor WebAssembly Application","request":"launch"}],"configurationAttributes":{"launch":{"properties":{"cwd":{"type":"string","description":"The directory of the Blazor WebAssembly app, defaults to the workspace folder.","default":"${workspaceFolder}"},"url":{"type":"string","description":"The URL of the application","default":"https://localhost:5001"},"browser":{"type":"string","description":"The debugging browser to launch (Edge or Chrome)","default":"chrome","enum":["chrome","edge"]},"trace":{"type":["boolean","string"],"default":"true","enum":["verbose",true],"description":"If true, verbose logs from JS debugger are sent to log file. If 'verbose', send logs to console."},"hosted":{"type":"boolean","default":"false","description":"True if the app is a hosted Blazor WebAssembly app, false otherwise."},"webRoot":{"type":"string","default":"${workspaceFolder}","description":"Specifies the absolute path to the webserver root."},"timeout":{"type":"number","default":30000,"description":"Retry for this number of milliseconds to connect to browser."},"program":{"type":"string","default":"${workspaceFolder}/Server/bin/Debug/<target-framework>/<target-dll>","description":"The path of the DLL to execute when launching a hosted server app"},"env":{"type":"object","description":"Environment variables passed to dotnet. Only valid for hosted apps."},"dotNetConfig":{"description":"Options passed to the underlying .NET debugger. For more info, see https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger.md.","type":"object","required":[],"default":{},"properties":{"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window. Applicable only for the app server of hosted Blazor WASM apps.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}}}},"browserConfig":{"description":"Options based to the underlying JavaScript debugger. For more info, see https://github.com/microsoft/vscode-js-debug/blob/master/OPTIONS.md.","type":"object","required":[],"default":{},"properties":{"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"}}}}},"attach":{"properties":{"url":{"type":"string","description":"The URL of the application","default":"https://localhost:5001"},"cwd":{"type":"string","description":"The directory of the Blazor WebAssembly app, defaults to the workspace folder.","default":"${workspaceFolder}"},"browser":{"type":"string","description":"The debugging browser to launch (Edge or Chrome)","default":"chrome","enum":["chrome","edge"]},"trace":{"type":["boolean","string"],"default":"true","enum":["verbose",true],"description":"If true, verbose logs from JS debugger are sent to log file. If 'verbose', send logs to console."},"webRoot":{"type":"string","default":"${workspaceFolder}","description":"Specifies the absolute path to the webserver root."},"timeout":{"type":"number","default":30000,"description":"Retry for this number of milliseconds to connect to browser."}}}}}],"semanticTokenTypes":[{"id":"razorTagHelperElement","description":"A Razor TagHelper Element"},{"id":"razorTagHelperAttribute","description":"A Razor TagHelper Attribute"},{"id":"razorTransition","description":"A Razor transition"},{"id":"razorDirectiveAttribute","description":"A Razor Directive Attribute"},{"id":"razorDirectiveColon","description":"A colon between directive attribute parameters"},{"id":"razorDirective","description":"A Razor directive such as 'code' or 'function'"},{"id":"razorComment","description":"A Razor comment"},{"id":"markupCommentPunctuation","description":"The '@' or '*' of a Razor comment."},{"id":"markupTagDelimiter","description":"Markup delimiters like '<', '>', and '/'."},{"id":"markupOperator","description":"Delimiter for Markup Attribute Key-Value pairs."},{"id":"markupElement","description":"The name of a Markup element."},{"id":"markupAttribute","description":"The name of a Markup attribute."},{"id":"markupComment","description":"The contents of a Markup comment."},{"id":"markupCommentPunctuation","description":"The begining or ending punctuation of a Markup comment."},{"id":"plainKeyword","description":"Represents a keyword"},{"id":"controlKeyword","description":"Represents a control-flow keyword"},{"id":"operatorOverloaded","description":"Represents a custom implementation of an operator"},{"id":"preprocessorKeyword","description":"Represents"},{"id":"preprocessorText","description":"Represents"},{"id":"excludedCode","description":""},{"id":"punctuation","description":""},{"id":"stringVerbatim","description":""},{"id":"stringEscapeCharacter","description":""},{"id":"delegate","description":""},{"id":"module","description":""},{"id":"extensionMethod","description":""},{"id":"field","description":""},{"id":"local","description":""},{"id":"xmlDocCommentAttributeName","description":""},{"id":"xmlDocCommentAttributeQuotes","description":""},{"id":"xmlDocCommentAttributeValue","description":""},{"id":"xmlDocCommentCDataSection","description":""},{"id":"xmlDocCommentComment","description":""},{"id":"xmlDocCommentDelimiter","description":""},{"id":"xmlDocCommentEntityReference","description":""},{"id":"xmlDocCommentName","description":""},{"id":"xmlDocCommentProcessingInstruction","description":""},{"id":"xmlDocCommentText","description":""}],"semanticTokenModifiers":[],"semanticTokenScopes":[{"language":"aspnetcorerazor","scopes":{"razorTagHelperElement":["entity.name.class.element.taghelper"],"razorTagHelperAttribute":["entity.name.class.attribute.taghelper"],"razorTransition":["keyword.control.razor.transition"],"razorDirectiveAttribute":["keyword.control.razor.directive.attribute","keyword.control.cshtml.directive.attribute"],"razorDirectiveColon":["keyword.control.razor.directive.colon","keyword.control.cshtml.directive.colon"],"razorDirective":["keyword.control.razor.directive","keyword.control.cshtml.directive"],"razorComment":["comment.block.razor"],"razorCommentTransition":["meta.comment.razor","keyword.control.cshtml.transition"],"razorCommentStar":["keyword.control.razor.comment.star","meta.comment.razor"],"angleBracket":["punctuation.definition.tag"],"forwardSlash":["punctuation.definition.tag"],"equals":["punctuation.separator.key-value.html"],"markupElement":["entity.name.tag.html"],"markupAttribute":["entity.other.attribute-name.html"],"markupComment":["comment.block.html"],"markupCommentPunctuation":["punctuation.definition.comment.html","comment.block.html"]}},{"language":"csharp","scopes":{"plainKeyword":["keyword.cs"],"controlKeyword":["keyword.control.cs"],"operatorOverloaded":["entity.name.function.member.overload.cs"],"preprocessorKeyword":["keyword.preprocessor.cs"],"preprocessorText":["meta.preprocessor.string.cs"],"excludedCode":["support.other.excluded.cs"],"punctuation":["punctuation.cs"],"stringVerbatim":["string.verbatim.cs"],"stringEscapeCharacter":["constant.character.escape.cs"],"delegate":["entity.name.type.delegate.cs"],"module":["entity.name.type.module.cs"],"extensionMethod":["entity.name.function.extension.cs"],"field":["entity.name.variable.field.cs"],"local":["entity.name.variable.local.cs"],"xmlDocCommentAttributeName":["comment.documentation.attribute.name.cs"],"xmlDocCommentAttributeQuotes":["comment.documentation.attribute.quotes.cs"],"xmlDocCommentAttributeValue":["comment.documentation.attribute.value.cs"],"xmlDocCommentCDataSection":["comment.documentation.cdata.cs"],"xmlDocCommentComment":["comment.documentation.comment.cs"],"xmlDocCommentDelimiter":["comment.documentation.delimiter.cs"],"xmlDocCommentEntityReference":["comment.documentation.entityReference.cs"],"xmlDocCommentName":["comment.documentation.name.cs"],"xmlDocCommentProcessingInstruction":["comment.documentation.processingInstruction.cs"],"xmlDocCommentText":["comment.documentation.cs"]}}],"languages":[{"id":"aspnetcorerazor","extensions":[".cshtml",".razor"],"mimetypes":["text/x-cshtml"],"configuration":"./src/razor/language-configuration.json"}],"grammars":[{"language":"aspnetcorerazor","scopeName":"text.aspnetcorerazor","path":"./src/razor/syntaxes/aspnetcorerazor.tmLanguage.json"}],"menus":{"commandPalette":[{"command":"dotnet.test.runTestsInContext","when":"editorLangId == csharp"},{"command":"dotnet.test.debugTestsInContext","when":"editorLangId == csharp"}],"editor/title":[{"command":"extension.showRazorCSharpWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"extension.showRazorHtmlWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"razor.reportIssue","when":"resourceLangId == aspnetcorerazor"}],"editor/context":[{"command":"dotnet.test.runTestsInContext","when":"editorLangId == csharp","group":"2_dotnet@1"},{"command":"dotnet.test.debugTestsInContext","when":"editorLangId == csharp","group":"2_dotnet@2"}]}},"uuid":"d0bfc4ab-1d3a-4487-8782-7cf6027b4fff","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-dotnettools.csharp","identifier":{"value":"ms-dotnettools.csharp","_lower":"ms-dotnettools.csharp"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/ms-dotnettools.csharp-1.23.11","path":"/Users/rt/.vscode/extensions/ms-dotnettools.csharp-1.23.11","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"1.3.1","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.53.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.BuildAndDebugActiveFile","onCommand:C_Cpp.ConfigurationEditJSON","onCommand:C_Cpp.ConfigurationEditUI","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.EnableErrorSquiggles","onCommand:C_Cpp.DisableErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.TakeSurvey","onCommand:C_Cpp.LogDiagnostics","onCommand:C_Cpp.RescanWorkspace","onCommand:C_Cpp.VcpkgClipboardInstallSuggested","onCommand:C_Cpp.VcpkgOnlineHelpSuggested","onCommand:C_Cpp.GenerateEditorConfig","onCommand:C_Cpp.GoToNextDirectiveInGroup","onCommand:C_Cpp.GoToPrevDirectiveInGroup","onDebugInitialConfigurations","onDebugResolve:cppdbg","onDebugResolve:cppvsdbg","workspaceContains:/.vscode/c_cpp_properties.json","onFileSystem:cpptools-schema"],"main":"./dist/main","contributes":{"taskDefinitions":[{"type":"cppbuild","required":["command","label"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","description":"The path to either a compiler or script that performs compilation"},"args":{"type":"array","description":"Additional arguments to pass to the compiler or compilation script"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results","when":"cppReferenceTypes:hasResults"}]},"viewsWelcome":[{"view":"debug","contents":"To learn more about launch.json, see [Configuring C/C++ debugging](https://code.visualstudio.com/docs/cpp/launch-json-reference).","when":"debugStartLanguage == cpp || debugStartLanguage == c || debugStartLanguage == cuda-cpp"}],"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["autoDetect","${workspaceFolder}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":"string","description":"The full path of the clang-format executable. If not specified, and clang-format is available in the environment path, that is used.  If not found in the environment path, a copy of clang-format bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }","scope":"machine-overridable"},"C_Cpp.formatting":{"type":"string","enum":["clangFormat","vcFormat","Default","Disabled"],"enumDescriptions":["clang-format will be used to format code.","The Visual C++ formatting engine will be used to format code.","clang-format will be used to format code.","Code formatting will be disabled."],"default":"clangFormat","description":"Configures the formatting engine","scope":"resource"},"C_Cpp.vcFormat.indent.braces":{"type":"boolean","default":false,"description":"Braces are indented by the amount specified in the Editor: Tab Size setting.","scope":"resource"},"C_Cpp.vcFormat.indent.multiLineRelativeTo":{"type":"string","enum":["outermostParenthesis","innermostParenthesis","statementBegin"],"enumDescriptions":["Indent new line relative to the outermost open parenthesis.","Indent new line relative to the innermost open parenthesis.","Indent new line relative to the beginning of the current statement."],"default":"innermostParenthesis","description":"Determines what new line indentation is relative to","scope":"resource"},"C_Cpp.vcFormat.indent.withinParentheses":{"type":"string","enum":["alignToParenthesis","indent"],"enumDescriptions":["New line is aligned under the opening parenthesis.","New line is indented based on `C_Cpp.vcFormat.indent.multiLineRelativeTo`."],"default":"indent","description":"When a new line is typed, it is aligned under the opening parenthesis or based on `C_Cpp.vcFormat.indent.multiLineRelativeTo`.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveWithinParentheses":{"type":"boolean","default":false,"description":"In existing code, preserve the existing indent alignment of new lines within parentheses.","scope":"resource"},"C_Cpp.vcFormat.indent.caseLabels":{"type":"boolean","default":false,"description":"Labels are indented relative to switch statements by the amount specified in the Editor: Tab Size setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContents":{"type":"boolean","default":true,"description":"Code inside case block is indented relative to its label by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.caseContentsWhenBlock":{"type":"boolean","default":false,"description":"Indent braces following a case statement by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter":{"type":"boolean","default":true,"description":"Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.gotoLabels":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"enumDescriptions":["Position goto labels to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting","Position goto labels at the leftmost edge of the code.","Goto labels will not be formatted."],"default":"oneLeft","description":"The position of goto labels","scope":"resource"},"C_Cpp.vcFormat.indent.preprocessor":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"enumDescriptions":["Preprocessor directives are positioned to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting","Preprocessor directives are positioned at the leftmost edge of the code.","Preprocessor directives will not be formatted."],"default":"leftmostColumn","description":"The position of preprocessor directives","scope":"resource"},"C_Cpp.vcFormat.indent.accessSpecifiers":{"type":"boolean","default":false,"description":"Access specifiers are indented relative to class or struct definitions by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.namespaceContents":{"type":"boolean","default":true,"description":"Code is indented relative to its enclosing namespace by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.preserveComments":{"type":"boolean","default":false,"description":"Indentation of comments is not changed during formatting operations.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for namespaces","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.type":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for type definitions","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.function":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for functions","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.block":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for control blocks","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda":{"enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for lambda functions","scope":"resource"},"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines":{"type":"boolean","default":false,"description":"Place opening and closing braces for scopes on separate lines.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType":{"type":"boolean","default":false,"description":"For empty types, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction":{"type":"boolean","default":false,"description":"For empty function bodies, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeCatch":{"type":"boolean","default":true,"description":"Place 'catch' and similar keywords on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeElse":{"type":"boolean","default":true,"description":"Place 'else' on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile":{"type":"boolean","default":false,"description":"Place 'while' in a do-while loop on a new line.","scope":"resource"},"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["Add a space before the opening parenthesis of a function.","Spaces before opening parenthesis of a function are removed.","Spaces are left as entered."],"default":"remove","description":"Spacing between function names and opening parentheses of argument lists","scope":"resource"},"C_Cpp.vcFormat.space.withinParameterListParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses":{"type":"boolean","default":false,"description":"When a function parameter list is empty, a space is inserted between its parentheses.","scope":"resource"},"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"A space is added between the keyword and opening parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis":{"type":"boolean","default":false,"description":"A space is added before the opening parenthesis of lambda argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinCastParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.afterCastCloseParenthesis":{"type":"boolean","default":false,"description":"A space is added after the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.withinExpressionParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression.","scope":"resource"},"C_Cpp.vcFormat.space.beforeBlockOpenBrace":{"type":"boolean","default":true,"description":"A space is added before the opening braces of scope blocks.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyBraces":{"type":"boolean","default":false,"description":"When braces are empty and on the same line, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace":{"type":"boolean","default":false,"description":"A space is added before the opening brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinInitializerListBraces":{"type":"boolean","default":true,"description":"A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.preserveInInitializerList":{"type":"boolean","default":true,"description":"Spaces around commas are preserved inside uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.beforeOpenSquareBracket":{"type":"boolean","default":false,"description":"A space is added before opening square brackets.","scope":"resource"},"C_Cpp.vcFormat.space.withinSquareBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.beforeEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is added before the opening bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.groupSquareBrackets":{"type":"boolean","default":true,"description":"For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden.","scope":"resource"},"C_Cpp.vcFormat.space.withinLambdaBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeComma":{"type":"boolean","default":false,"description":"A space is added before every comma.","scope":"resource"},"C_Cpp.vcFormat.space.afterComma":{"type":"boolean","default":true,"description":"A space is added after every comma.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundMemberOperators":{"type":"boolean","default":true,"description":"Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInheritanceColon":{"type":"boolean","default":true,"description":"A space is added before the colon for inherited types in class definitions.","scope":"resource"},"C_Cpp.vcFormat.space.beforeConstructorColon":{"type":"boolean","default":true,"description":"A space is added before the colon in constructor definitions.","scope":"resource"},"C_Cpp.vcFormat.space.removeBeforeSemicolon":{"type":"boolean","default":true,"description":"Spaces are removed before every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.insertAfterSemicolon":{"type":"boolean","default":false,"description":"A space is inserted after every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundUnaryOperator":{"type":"boolean","default":true,"description":"Spaces between unary operators and operands are removed.","scope":"resource"},"C_Cpp.vcFormat.space.aroundBinaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around binary operators","scope":"resource"},"C_Cpp.vcFormat.space.aroundAssignmentOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around assignment operators","scope":"resource"},"C_Cpp.vcFormat.space.pointerReferenceAlignment":{"type":"string","enum":["left","center","right","ignore"],"enumDescriptions":["Pointer and reference operators are aligned to the left.","Pointer and reference operators are centered.","Pointer and reference operators are aligned to the right.","Pointer and reference operators are not formatted."],"default":"left","description":"Spaces around pointer and reference operators","scope":"resource"},"C_Cpp.vcFormat.space.aroundTernaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around conditional operators","scope":"resource"},"C_Cpp.vcFormat.wrap.preserveBlocks":{"type":"string","enum":["oneLiners","allOneLineScopes","never"],"enumDescriptions":["A complete code block that is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings","Any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings","Code blocks are always formatted based on the values of the VC Format: New Line settings"],"default":"oneLiners","description":"Wrapping options for blocks","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }","scope":"machine-overridable"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled","EnabledIfIncludesResolve"],"default":"EnabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":"string","description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":"string","description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"window"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"window"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"window"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked.","scope":"window"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"machine-overridable"},"C_Cpp.simplifyStructuredComments":{"type":"boolean","default":true,"description":"If true, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.","scope":"application"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"window"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","description":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is \"%LocalAppData%/Microsoft/vscode-cpptools\" on Windows, \"$XDG_CACHE_HOME/vscode-cpptools/\" on Linux (or \"$HOME/.cache/vscode-cpptools/\" if XDG_CACHE_HOME is not defined), and \"$HOME/Library/Caches/vscode-cpptools/\" on Mac. The default path will be used if no path is specified or if a specified path is invalid.","scope":"machine-overridable"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"description":"Maximum size of the per-workspace hard drive space in megabytes (MB) for cached precompiled headers; the actual usage may fluctuate around this value. The default size is 5120 MB. Precompiled header caching is disabled when the size is 0.","scope":"machine-overridable","minimum":0},"C_Cpp.intelliSenseMemoryLimit":{"type":"number","default":4096,"description":"Memory usage limit in megabytes (MB) of an IntelliSense process. The default limit is 4096 MB and the maximum limit is 16 GB. The extension will shutdown and restart an IntelliSense process when it exceeds the limit.","scope":"machine-overridable","minimum":256,"maximum":16384},"C_Cpp.intelliSenseUpdateDelay":{"type":"number","default":2000,"description":"Controls the delay in milliseconds before IntelliSense starts updating after a modification.","scope":"application","minimum":500,"maximum":3000},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified in c_cpp_properties.json. If \"includePath\" is specified, add \"${default}\" to the array to insert the values from this setting.","scope":"machine-overridable"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"machine-overridable"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"machine-overridable"},"C_Cpp.default.windowsSdkVersion":{"type":"string","description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$","scope":"machine-overridable"},"C_Cpp.default.compileCommands":{"type":"string","description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"machine-overridable"},"C_Cpp.default.intelliSenseMode":{"type":"string","enum":["","macos-clang-x86","macos-clang-x64","macos-clang-arm","macos-clang-arm64","macos-gcc-x86","macos-gcc-x64","macos-gcc-arm","macos-gcc-arm64","linux-clang-x86","linux-clang-x64","linux-clang-arm","linux-clang-arm64","linux-gcc-x86","linux-gcc-x64","linux-gcc-arm","linux-gcc-arm64","windows-clang-x86","windows-clang-x64","windows-clang-arm","windows-clang-arm64","windows-gcc-x86","windows-gcc-x64","windows-gcc-arm","windows-gcc-arm64","windows-msvc-x86","windows-msvc-x64","windows-msvc-arm","windows-msvc-arm64","clang-x86","clang-x64","clang-arm","clang-arm64","gcc-x86","gcc-x64","gcc-arm","gcc-arm64","msvc-x86","msvc-x64","msvc-arm","msvc-arm64"],"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerArgs":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in configuration if \"compilerArgs\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","gnu89","gnu99","gnu11","gnu17"],"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20"],"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.configurationProvider":{"type":"string","description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"machine-overridable"},"C_Cpp.default.browse.databaseFilename":{"type":"string","description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"machine-overridable"},"C_Cpp.default.customConfigurationVariables":{"type":["object","null"],"default":null,"patternProperties":{"(^.+$)":{"type":"string"}},"description":"The value to use in a configuration if \"customConfigurationVariables\" is not set, or the values to insert if \"${default}\" is present as a key in \"customConfigurationVariables\".","scope":"machine-overridable"},"C_Cpp.default.enableConfigurationSquiggles":{"type":"boolean","default":true,"description":"Controls whether the extension will report errors detected in c_cpp_properties.json.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"application"},"C_Cpp.experimentalFeatures":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether \"experimental\" features are usable.","scope":"window"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"description":"If true, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code is colorized based on IntelliSense. This setting only applies if intelliSenseEngine is set to \"Default\".","scope":"window"},"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.addNodeAddonIncludePaths":{"type":"boolean","default":false,"markdownDescription":"Add include paths from nan and node-addon-api when they're dependencies.","scope":"application"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"description":"If true, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"},"C_Cpp.debugger.useBacktickCommandSubstitution":{"type":"boolean","default":false,"description":"If true, debugger shell command substitution will use obsolete backtick (`).","scope":"window"},"C_Cpp.codeFolding":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code folding ranges are provided by the language server.","scope":"window"},"C_Cpp.autocompleteAddParentheses":{"type":"boolean","default":false,"description":"If true, autocomplete will automatically add \"(\" after function calls, in which case \")\" may also be added, depending on the value of the \"editor.autoClosingBrackets\" setting.","scope":"resource"},"C_Cpp.files.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders (and files if \"C_Cpp.exclusionPolicy\" is changed). These are specific to the C/C++ extension and are in addition to \"files.exclude\", but unlike \"files.exclude\" they are not removed from the Explorer view. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{"**/.vscode":true},"additionalProperties":{"anyOf":[{"type":"boolean","description":"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","description":"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."}}}]},"scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"C_Cpp.GenerateEditorConfig","title":"Generate EditorConfig contents from VC Format settings","category":"C/C++"},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}},{"command":"C_Cpp.GoToNextDirectiveInGroup","title":"Go to next preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","title":"Go to previous preprocessor directive in conditional group","category":"C/C++"}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorLangId == 'c' && editorTextFocus || editorLangId == 'cpp' && editorTextFocus || editorLangId == 'cuda-cpp' && editorTextFocus"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","languages":["c","cpp","cuda-cpp"],"variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null. It is used in conjuction of either \"miDebugServerAddress\" or your own server with a \"customSetupCommand\" that runs \"-target-select remote <server:port>\"`.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. \nDefault is 'true'.","default":true}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. \nDefault is 'true'.","default":true}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","languages":["c","cpp","cuda-cpp"],"variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"[Deprecated by 'console'] If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:'std::cin' or 'scanf')","VS Code's integrated terminal","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios, and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"description":"Where to launch the debug target. Defaults to 'internalConsole' if not defined.","default":"internalConsole"},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"threadExit":{"type":"boolean","description":"Optional flag to determine whether thread exits messages should be logged to the Debug Console. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Optional flag to determine whether target process exits messages should be logged to the Debug Console., or debugging is stopped. Default: `true`.","default":true}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true}}}}}],"breakpoints":[{"language":"c"},{"language":"cpp"},{"language":"cuda-cpp"},{"language":"cuda"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"}],"editor/context":[{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"}],"commandPalette":[{"command":"C_Cpp.referencesViewGroupByType","when":"cppReferenceTypes:hasResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cppReferenceTypes:hasResults"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[cuda-cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[c]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[Log]":{"editor.wordWrap":"off"}},"semanticTokenTypes":[{"id":"referenceType","superType":"class","description":"A C++/CLI reference type."},{"id":"cliProperty","superType":"property","description":"A C++/CLI property."},{"id":"genericType","superType":"class","description":"A C++/CLI generic type."},{"id":"valueType","superType":"class","description":"A C++/CLI value type."},{"id":"templateFunction","superType":"function","description":"A template function."},{"id":"templateType","superType":"class","description":"A template type."},{"id":"operatorOverload","superType":"operator","description":"An overloaded operator."},{"id":"memberOperatorOverload","superType":"operator","description":"An overloaded operator member function."},{"id":"newOperator","superType":"operator","description":"A C++ new or delete operator."},{"id":"customLiteral","superType":"number","description":"A user-defined literal."},{"id":"numberLiteral","superType":"number","description":"A user-defined literal number."},{"id":"stringLiteral","superType":"string","description":"A user-defined literal string."}],"semanticTokenModifiers":[{"id":"global","description":"Annotates a symbol that is declared in global scope."},{"id":"local","description":"Annotates a symbol that is declared in local scope."}],"semanticTokenScopes":[{"scopes":{"label":["entity.name.label"],"variable.global":["variable.other.global"],"variable.local":["variable.other.local"],"property.static":["variable.other.property.static"],"method.static":["entity.name.function.member.static"],"macro":["entity.name.function.preprocessor"],"referenceType":["entity.name.type.class.reference"],"cliProperty":["variable.other.property.cli"],"genericType":["entity.name.type.class.generic"],"valueType":["entity.name.type.class.value"],"templateFunction":["entity.name.function.templated"],"templateType":["entity.name.type.class.templated"],"operatorOverload":["entity.name.function.operator"],"memberOperatorOverload":["entity.name.function.operator.member"],"newOperator":["keyword.operator.new"],"numberLiteral":["entity.name.operator.custom-literal.number"],"customLiteral":["entity.name.operator.custom-literal"],"stringLiteral":["entity.name.operator.custom-literal.string"]}}]},"scripts":{"vscode:prepublish":"yarn run compile","compile":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --env vscode_nls","compile-dev":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development","compile-watch":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --env vscode_nls --watch --progress","compile-dev-watch":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development --watch --progress","generateOptionsSchema":"node ./tools/prepublish.js && node ./out/tools/generateOptionsSchema.js","generate-native-strings":"node ./tools/prepublish.js && gulp generate-native-strings","translations-export":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-export","translations-generate":"node ./tools/prepublish.js && gulp translations-generate","translations-import":"node ./tools/prepublish.js && gulp translations-import","prepublishjs":"node ./tools/prepublish.js","pretest":"tsc -p test.tsconfig.json","generatePackageHashes":"gulp generate-package-hashes","pr-check":"gulp pr-check","lint":"gulp lint","unitTests":"tsc -p test.tsconfig.json && node ./out/test/unitTests/runTest.js","integrationTests":"tsc -p test.tsconfig.json && node ./out/test/integrationTests/languageServer/runTest.js","intelliSenseFeaturesTests":"tsc -p test.tsconfig.json && node ./out/test/integrationTests/IntelliSenseFeatures/runTest.js","import-edge-strings":"node ./import_edge_strings.js"},"devDependencies":{"@octokit/rest":"^16.28.9","@types/minimatch":"^3.0.3","@types/mkdirp":"^0.5.2","@types/mocha":"^8.2.2","@types/node":"^14.14.0","@types/plist":"^3.0.2","@types/semver":"^7.1.0","@types/tmp":"^0.1.0","@types/vscode":"1.53.0","@types/which":"^1.3.2","@types/yauzl":"^2.9.1","@typescript-eslint/eslint-plugin":"^2.19.2","@typescript-eslint/eslint-plugin-tslint":"^2.19.2","@typescript-eslint/parser":"^2.19.2","async-child-process":"^1.1.1","await-notify":"^1.0.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.1","eslint-plugin-jsdoc":"^21.0.0","event-stream":"^4.0.1","fs-extra":"^8.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-env":"^0.4.0","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^2.6.5","gulp-typescript":"^5.0.1","http-proxy-agent":"^2.1.0","minimist":"^1.2.5","mocha":"^8.3.2","parse5":"^5.1.0","parse5-traverse":"^1.0.3","ts-loader":"^8.1.0","tslint":"^5.19.0","typescript":"^3.5.3","vscode-debugadapter":"^1.35.0","vscode-debugprotocol":"^1.35.0","vscode-nls-dev":"^3.2.6","vscode-test":"^1.3.0","webpack":"^5.28.0","webpack-cli":"^4.5.0","xml2js":"^0.4.19"},"dependencies":{"comment-json":"^3.0.3","editorconfig":"^0.15.3","escape-string-regexp":"^2.0.0","https-proxy-agent":"^2.2.4","minimatch":"^3.0.4","mkdirp":"^0.5.1","plist":"^3.0.2","tmp":"^0.1.0","vscode-cpptools":"^5.0.0","vscode-extension-telemetry":"^0.1.2","vscode-languageclient":"^5.2.1","vscode-nls":"^4.1.1","which":"^2.0.2","yauzl":"^2.10.0"},"resolutions":{"**/mkdirp/minimist":"^0.2.1","yargs-parser":"^15.0.1","y18n":"^5.0.5"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2161011","platforms":["linux"],"architectures":["x64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"7C43AA78021C5DB8F6DE9751EC8435D2BE1137CAC861801CDFADAA4B48A42AC3"},{"description":"C/C++ language components (Linux / armhf)","url":"https://go.microsoft.com/fwlink/?linkid=2160914","platforms":["linux"],"architectures":["arm"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"ED83E6E0F5784323CDF42BA1EF57CDFFBF2A81D468B08C8ECF126A2D042343F2"},{"description":"C/C++ language components (Linux / aarch64)","url":"https://go.microsoft.com/fwlink/?linkid=2160915","platforms":["linux"],"architectures":["arm64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"52DD114FF466FA3542D7F98F12716E4296712986CA4908B18DCC039209B8D2CC"},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=2161012","platforms":["darwin"],"architectures":["x64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"53654F3D21C5D470D3C05EA48CFB7AB3CB197344049DC55AEB07374AFECD1587"},{"description":"C/C++ language components (OS X ARM64)","url":"https://go.microsoft.com/fwlink/?linkid=2160918","platforms":["darwin"],"architectures":["arm64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"E00370987D321E5AB58894B95F1545B52F59ED8E548BE1CBC8393F8B63562BDE"},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2160913","platforms":["win32"],"architectures":["x64","x86"],"binaries":["./bin/cpptools.exe","./bin/cpptools-srv.exe"],"integrity":"970504DB40E0B54E48075C1FBCE0F34AB674DE3F1CCAD51FFA04689513CC8013"},{"description":"C/C++ language components (Windows ARM64)","url":"https://go.microsoft.com/fwlink/?linkid=2160916","platforms":["win32"],"architectures":["arm64"],"binaries":["./bin/cpptools.exe","./bin/cpptools-srv.exe"],"integrity":"E85CF0C80B64F940F73E158966749C0A95D122907170CACECDCBB118986D0E57"},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=2152861","platforms":["linux"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format"],"integrity":"B29779E4FE3D03094655FD24CC17B55B41518EDDCCB1E3DF3F4665F9685152E0"},{"description":"ClangFormat (Linux / armhf)","url":"https://go.microsoft.com/fwlink/?LinkID=2152860","platforms":["linux"],"architectures":["arm"],"binaries":["./LLVM/bin/clang-format"],"integrity":"F1CD21F581715A2C2A3B10C8D33FF81E5CBCD58856AA73CA56A88B5F085EA0D7"},{"description":"ClangFormat (Linux / aarch64)","url":"https://go.microsoft.com/fwlink/?LinkID=2152922","platforms":["linux"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format"],"integrity":"97B2A5A274F53FBB37485A383AD379CD556E85413BF843F0F0FD10536A0D705D"},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=2152859","platforms":["darwin"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format.darwin"],"integrity":"7AA436BA25E3404DC658A137188BEC65FF2532D1FEB314ABBBC5EBC9AAF5CCF7"},{"description":"ClangFormat (OS X arm64)","url":"https://go.microsoft.com/fwlink/?LinkID=2160917","platforms":["darwin"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format.darwin"],"integrity":"BF5357714856AC08A69FAD4231C9EFBE47E97497D8E227E1506FCAA1C89D11E0"},{"description":"ClangFormat (Windows x86)","url":"https://go.microsoft.com/fwlink/?LinkID=2152921","platforms":["win32"],"architectures":["x86"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"993A65F61F4BF6CA6FEF6F9C1B6EB4341CE63F30A72272CABA65392695764DA7"},{"description":"ClangFormat (Windows x64)","url":"https://go.microsoft.com/fwlink/?LinkID=2152923","platforms":["win32"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"5E271FD44792B3675136A34466F67A876174B7818533CF37486372E43E014E62"},{"description":"ClangFormat (Windows arm64)","url":"https://go.microsoft.com/fwlink/?LinkID=2152862","platforms":["win32"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"9944827F70A8C53127B1A7860401923DED2DB7FBAD75E7A8106636891C11F832"},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[],"integrity":"579295329C1825588B6251EEA56571D1B9555BD529AA1A319CDFE741BC22D786"},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x64"],"binaries":["./debugAdapters/mono.linux-x86_64"],"integrity":"927C5094E83CE64EDC3A267EE1F13267CFA09FC1E9A5ADC870A752C05AD26F17"},{"description":"Mono Runtime (Linux / armhf)","url":"https://aka.ms/mono-runtime-linux-arm","platforms":["linux"],"architectures":["arm"],"binaries":["./debugAdapters/mono.linux-armhf"],"integrity":"D2D1FE7FB5CC5B2A60364F08829467509879D603FC951AC3805B530C8CEEF981"},{"description":"Mono Runtime (Linux / arm64)","url":"https://aka.ms/mono-runtime-linux-arm64","platforms":["linux"],"architectures":["arm64"],"binaries":["./debugAdapters/mono.linux-arm64"],"integrity":"946C54C8C6BF5BF79AC05D4E152F8D8647700FA786C21505832B3C79988339B4"},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"],"integrity":"5D9E5AB3E921D138887BD12FF46B02BFC85B692B438EDFAAEB1E1E7837F1D40B"},{"description":"LLDB-MI (macOS Mojave and higher)","url":"https://go.microsoft.com/fwlink/?linkid=2154927","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":false,"binaries":["./debugAdapters/lldb-mi/bin/lldb-mi"],"integrity":"FA76E76C7D8E5D5CD0CC8E68C6FB70A354750D596DF3CED36ABF78AAD5C562C0"},{"description":"LLDB 3.8.0 (macOS High Sierra and lower)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":true,"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"],"integrity":"D4ACCD43F562E42CE30879AC15ADF5FB6AA50656795DCE8F3AD32FB108BB3B7E"},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2153010","platforms":["win32"],"architectures":["x64","x86"],"binaries":["./debugAdapters/vsdbg/bin/vsdbg.exe"],"integrity":"52C4234976D527A7BF02EB2E8844F3C605DC4BD1D3847F83C8675CD23967BAB3"}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/ms-vscode.cpptools-1.3.1","path":"/Users/rt/.vscode/extensions/ms-vscode.cpptools-1.3.1","scheme":"file"}},{"name":"vscode-typescript-tslint-plugin","version":"1.3.3","private":true,"displayName":"TSLint","description":"TSLint support for Visual Studio Code","publisher":"ms-vscode","icon":"docs/icon.png","license":"MIT","galleryBanner":{"color":"#fcfcfc","theme":"light"},"repository":{"url":"https://github.com/Microsoft/vscode-typescript-tslint-plugin.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-typescript-tslint-plugin/issues"},"categories":["Programming Languages"],"keywords":["tslint","typescript","lint","ts","linters"],"engines":{"vscode":"^1.32.0"},"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onCommand:tslint.manageWorkspaceLibraryExecution","onCommand:tslint.resetWorkspaceLibraryExecution"],"main":"./out/index.js","contributes":{"jsonValidation":[{"fileMatch":"tslint.json","url":"http://json.schemastore.org/tslint"},{"fileMatch":"jsconfig*.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"tsconfig*.json","url":"./schemas/tsconfig.schema.json"}],"problemPatterns":[{"name":"tslint4","regexp":"^(\\(\\S*\\)\\s+)?(\\S.*)\\[(\\d+), (\\d+)\\]:\\s+(.*)$","file":2,"line":3,"column":4,"message":5},{"name":"tslint5","regexp":"^(WARNING|ERROR):(\\s+\\(\\S*\\))?\\s+(\\S.*)(:|\\[)(\\d+)(:|, )(\\d+)(\\]:\\s+|\\s+-\\s+)(.*)$","severity":1,"file":3,"line":5,"column":7,"message":9}],"problemMatchers":[{"name":"tslint4","label":"tslint (version 4) warnings","owner":"tslint","source":"tslint","applyTo":"closedDocuments","fileLocation":"absolute","severity":"warning","pattern":"$tslint4"},{"name":"tslint5","owner":"tslint","source":"tslint","label":"tslint (version 5) warnings","applyTo":"closedDocuments","fileLocation":"absolute","severity":"warning","pattern":"$tslint5"}],"typescriptServerPlugins":[{"name":"typescript-tslint-plugin","enableForWorkspaceTypeScriptVersions":true}],"configuration":{"type":"object","title":"TSLint","properties":{"tslint.jsEnable":{"type":"boolean","description":"Control whether tslint is enabled for JavaScript files or not."},"tslint.configFile":{"type":"string","description":"The path to the rules configuration file"},"tslint.ignoreDefinitionFiles":{"type":"boolean","description":"Control if TypeScript definition files should be ignored."},"tslint.exclude":{"description":"A glob or an array of globs. Any file matching these globs will not be linted.","anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"tslint.alwaysShowRuleFailuresAsWarnings":{"type":"boolean","description":"Always show rule failures as warnings, independent of the tslint configuration.","default":true},"tslint.suppressWhileTypeErrorsPresent":{"type":"boolean","description":"Always show rule failures as warnings, independent of the tslint configuration."},"tslint.packageManager":{"type":"string","enum":["npm","pnpm","yarn"],"default":"npm","description":"The package manager you use to install node modules."}}},"commands":[{"command":"tslint.manageWorkspaceLibraryExecution","title":"Manage workspace library execution","category":"TSLint","enablement":"editorLangId == typescript || editorLangId == typescriptreact"},{"command":"tslint.resetWorkspaceLibraryExecution","title":"Reset workspace library execution","category":"TSLint","enablement":"editorLangId == typescript || editorLangId == typescriptreact"}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -w -p ./","lint":"tslint -c tslint.json -p ."},"dependencies":{"typescript-tslint-plugin":"1.0.1"},"devDependencies":{"@types/vscode":"^1.32.0","tslint":"^6.1.0","typescript":"^4.0.5"},"uuid":"90a37ca1-92a2-488a-b196-7a8c0b0127ea","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.vscode-typescript-tslint-plugin","identifier":{"value":"ms-vscode.vscode-typescript-tslint-plugin","_lower":"ms-vscode.vscode-typescript-tslint-plugin"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/ms-vscode.vscode-typescript-tslint-plugin-1.3.3","path":"/Users/rt/.vscode/extensions/ms-vscode.vscode-typescript-tslint-plugin-1.3.3","scheme":"file"}},{"name":"debugger-for-chrome","displayName":"Debugger for Chrome","version":"4.12.12","icon":"images/icon.png","description":"Debug your JavaScript code in the Chrome browser, or any other target that supports the Chrome Debugger protocol.","author":{"name":"Microsoft Corporation"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-chrome-debug"},"publisher":"msjsdiag","bugs":"https://github.com/microsoft/vscode-chrome-debug/issues","extensionKind":["ui"],"engines":{"vscode":"^1.47.0"},"categories":["Debuggers"],"keywords":["multi-root ready"],"license":"SEE LICENSE IN LICENSE.txt","dependencies":{"vscode-chrome-debug-core":"^6.8.9","vscode-debugadapter":"^1.40.0","vscode-nls":"^4.1.1"},"devDependencies":{"@types/chai":"^4.1.7","@types/chai-string":"^1.4.1","@types/lodash":"^4.14.120","@types/mocha":"^2.2.48","@types/mockery":"^1.4.29","@types/node":"^12.0.0","@types/puppeteer":"^1.12.3","@types/source-map":"^0.1.27","@types/tmp":"0.0.32","chai":"^4.2.0","chai-string":"^1.5.0","concurrently":"^3.1.0","del":"^3.0.0","event-stream":"^3.3.4","get-port":"^5.0.0","glob":"^7.1.1","gulp":"^4.0.0","gulp-sourcemaps":"^2.6.4","gulp-tslint":"^8.1.3","gulp-typescript":"^4.0.1","gulp-util":"^3.0.8","http-server":"^0.12.3","lodash":"^4.17.15","minimist":"^1.2.5","mocha":"^7.1.2","mocha-junit-reporter":"^1.23.3","mocha-multi-reporters":"^1.1.7","mockery":"^1.7.0","puppeteer":"^1.20.0","request-promise-native":"^1.0.7","source-map-support":"^0.5.11","tmp":"0.0.31","ts-loader":"^1.0.0","tslint":"^5.7.0","typemoq":"^2.1.0","typescript":"^3.9.3","vsce":"^1.71.0","vscode":"^1.1.30","vscode-chrome-debug-core-testsupport":"^4.0.0","vscode-debugadapter-testsupport":"^1.33.0","vscode-debugprotocol":"^1.37.0","vscode-nls-dev":"^3.3.1"},"main":"./out/src/extension","activationEvents":["onDebugInitialConfigurations","onDebugResolve:chrome","onCommand:extension.chrome-debug.toggleSkippingFile","onCommand:extension.chrome-debug.toggleSmartStep"],"scripts":{"build":"gulp build","watch":"gulp watch","start":"node out/src/chromeDebug.js --server=4712","test":"mocha --exit --timeout 20000 -s 2000 -u tdd --colors \"./out/test/*.test.js\"","intTest":"mocha --exit --timeout 20000 -s 3500 -u tdd --colors --reporter node_modules/vscode-chrome-debug-core-testsupport/out/loggingReporter.js ./out/test/int/*.test.js","frameworkTest":"mocha --require source-map-support/register --exit --timeout 20000 -s 3500 -u tdd --colors --reporter mocha-multi-reporters --reporter-options configFile=test/int/testConfig.json ./out/test/int/framework/*.test.js","allIntTest":"mocha --require source-map-support/register --exit --timeout 20000 -s 3500 -u tdd --colors --reporter mocha-multi-reporters --reporter-options configFile=test/int/testConfig.json \"./out/test/int/**/*.test.js\"","lint":"gulp tslint","vscode:prepublish":"gulp verify-no-linked-modules","postinstall":"node ./node_modules/vscode/bin/install","patch":"npm version patch -m '%s'","minor":"npm version minor -m '%s'","major":"npm version major -m '%s'","package":"gulp package"},"contributes":{"breakpoints":[{"language":"javascript"},{"language":"typescriptreact"},{"language":"javascriptreact"},{"language":"fsharp"}],"configuration":{"properties":{"debug.chrome.useV3":{"type":"boolean","description":"Controls whether to delegate \"chrome\"-type launch configs to the js-debug extension.","deprecationMessage":"This setting is deprecated - please use `debug.javascript.usePreview` instead","default":true}}},"debuggers":[{"type":"chrome","label":"Chrome (legacy)","program":"./out/src/chromeDebug.js","runtime":"node","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","languages":["javascript","typescript","javascriptreact","typescriptreact"],"configurationSnippets":[{"label":"Chrome: Launch (legacy)","description":"Launch Chrome to debug a URL","body":{"type":"chrome","request":"launch","name":"Launch Chrome","url":"http://localhost:8080","webRoot":"^\"${2:\\${workspaceFolder\\}}\""}},{"label":"Chrome: Attach (legacy)","description":"Attach to an instance of Chrome already in debug mode","body":{"type":"chrome","request":"attach","name":"Attach to Chrome","port":9222,"webRoot":"^\"${2:\\${workspaceFolder\\}}\""}}],"configurationAttributes":{"launch":{"required":[],"properties":{"port":{"type":"number","description":"Port to use for Chrome remote debugging.","default":9222},"address":{"type":"string","description":"TCP/IP address of debug port","default":"127.0.0.1"},"file":{"type":"string","description":"A local html file to open in the browser","default":"${workspaceFolder}/index.html"},"url":{"type":"string","description":"Will search for a tab with this EXACT url and attach to it, if found","default":"http://localhost:8080"},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk","default":{"/":"${workspaceFolder}"}},"runtimeExecutable":{"type":["string","null"],"description":"Workspace absolute path to the runtime executable to be used. If not specified, Chrome will be used from the default install location.","default":null},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","description":"Optional dictionary of environment key/value pairs.","default":{}},"cwd":{"type":"string","description":"Optional working directory for the runtime executable.","default":null},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console in a human readable format","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"userDataDir":{"type":["string","boolean"],"description":"By default, Chrome is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.","default":true},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{"webpack:///./*":"${webRoot}/*","webpack:///src/*":"${webRoot}/*","webpack:///*":"*","webpack:///./~/*":"${webRoot}/node_modules/*","meteor://💻app/*":"${webRoot}/*"}},"smartStep":{"type":"boolean","description":"Automatically step through unmapped lines in sourcemapped files. For example, code that TypeScript produces automatically when downcompiling async/await or other features.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":[]},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.","default":10000},"disableNetworkCache":{"type":"boolean","description":"Controls whether to skip the network cache for each request","default":true},"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack","default":true},"breakOnLoad":{"type":"boolean","description":"Experimental feature -  If true, the debug adapter will attempt to set breakpoints in scripts before they are loaded, so it can hit breakpoints at the beginnings of those scripts. Has a perf impact.","default":true},"breakOnLoadStrategy":{"type":"string","enum":["instrument","regex"],"enumDescriptions":["Tell Chrome to pause as each script is loaded, resolving sourcemaps and setting breakpoints","Sets breakpoints optimistically in files with the same name as the file in which the breakpoint is set."],"description":"The strategy to use for breakOnLoad.","default":"instrument"},"targetTypes":{"type":["array","null"],"description":"An array of acceptable target types. The default is `[\"page\"]`.","default":["page"]}}},"attach":{"required":["port"],"properties":{"port":{"type":"number","description":"Port to use for Chrome remote debugging.","default":9222},"address":{"type":"string","description":"TCP/IP address of debug port","default":"127.0.0.1"},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console in a human readable format","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"url":{"type":"string","description":"Will search for a tab with this EXACT url and attach to it, if found","default":"http://localhost:8080"},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk","default":{}},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"smartStep":{"type":"boolean","description":"Automatically step through unmapped lines in sourcemapped files. For example, code that TypeScript produces automatically when downcompiling async/await or other features.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":[]},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.","default":10000},"disableNetworkCache":{"type":"boolean","description":"Controls whether to skip the network cache for each request","default":true},"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"targetTypes":{"type":["array","null"],"description":"An array of acceptable target types. The default is `[\"page\"]`.","default":["page"]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack","default":true}}}}}],"menus":{"debug/callstack/context":[{"command":"extension.chrome-debug.toggleSkippingFile","group":"navigation","when":"inDebugMode && debugType == 'chrome' && callStackItemType == 'stackFrame'"},{"command":"extension.chrome-debug.toggleSmartStep","group":"navigation","when":"inDebugMode && debugType == 'chrome' && callStackItemType == 'stackFrame'"}]},"commands":[{"command":"extension.chrome-debug.toggleSkippingFile","title":"Chrome: Toggle Skipping This File"},{"command":"extension.chrome-debug.toggleSmartStep","title":"Chrome: Toggle Smart Step"}]},"uuid":"1ec62ca5-d7f9-4ddb-a882-e8d018c0aefd","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"msjsdiag.debugger-for-chrome","identifier":{"value":"msjsdiag.debugger-for-chrome","_lower":"msjsdiag.debugger-for-chrome"},"extensionLocation":{"$mid":1,"fsPath":"/Users/rt/.vscode/extensions/msjsdiag.debugger-for-chrome-4.12.12","path":"/Users/rt/.vscode/extensions/msjsdiag.debugger-for-chrome-4.12.12","scheme":"file"}}]}